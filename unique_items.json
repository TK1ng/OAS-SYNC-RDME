{
    "swagger": "2.0",
    "info": {
      "description": "More description about the API",
      "version": "1.0.0",
      "title": "Swagger API Doc"
    },
    "host": "api-dev.suitefleet.com",
    "basePath": "/",
    "tags": [
      {
        "name": "asset-expenses-resource",
        "description": "Contains asset expenses"
      },
      {
        "name": "asset-expenses-with-asset-resource",
        "description": "Contains asset expenses"
      },
      {
        "name": "asset-resource",
        "description": "Contains asset endpoints"
      },
      {
        "name": "aws-resource",
        "description": "Contains AWS endpoints"
      },
      {
        "name": "company-admins-resource",
        "description": "Company Admins Resource"
      },
      {
        "name": "company-resource",
        "description": "Company Resource"
      },
      {
        "name": "customer-hook-resource",
        "description": "Customer Hook Resource"
      },
      {
        "name": "customer-resource",
        "description": "Customer Resource"
      },
      {
        "name": "department-resource",
        "description": "Contains department endpoints"
      },
      {
        "name": "employee-resource",
        "description": "Employee Resource"
      },
      {
        "name": "expenses-type-resource",
        "description": "Contains expensesType endpoints"
      },
      {
        "name": "geofence-resource",
        "description": "Contains geofence endpoints"
      },
      {
        "name": "grid-filter-resource",
        "description": "Grid Filter Resource"
      },
      {
        "name": "group-resource",
        "description": "Group Resource"
      },
      {
        "name": "hub-resource",
        "description": "Hub Resource"
      },
      {
        "name": "imported-data-resource",
        "description": "Imported Data Resource"
      },
      {
        "name": "issue-resource",
        "description": "Contains issue endpoints"
      },
      {
        "name": "legal-document-resource",
        "description": "Contains local document endpoints"
      },
      {
        "name": "lookup-resource",
        "description": "Contains lookups endpoints"
      },
      {
        "name": "netsuite-config-resource",
        "description": "Netsuite Config Resource"
      },
      {
        "name": "netsuite-sync-resource",
        "description": "Netsuite Sync Resource"
      },
      {
        "name": "pickup-assignment-resource",
        "description": "Pickup Assignment Resource"
      },
      {
        "name": "pickup-session-resource",
        "description": "Pickup Session Resource"
      },
      {
        "name": "planning-batch-resource",
        "description": "Planning Batch Resource"
      },
      {
        "name": "public-resource",
        "description": "Public Resource"
      },
      {
        "name": "refresh-token-endpoint",
        "description": "Refresh Token Endpoint"
      },
      {
        "name": "repair-order-resource",
        "description": "Contains repairOrder endpoints"
      },
      {
        "name": "sales-order-resource",
        "description": "Sales Order APIs"
      },
      {
        "name": "shift-assignment-resource",
        "description": "Shift Assignment Resource"
      },
      {
        "name": "shift-resource",
        "description": "Shift Resource"
      },
      {
        "name": "shipment-category-resource",
        "description": "Shipment Category Resource"
      },
      {
        "name": "shipment-package-resource",
        "description": "Shipment Package Resource"
      },
      {
        "name": "system-admins-resource",
        "description": "System Admins Resource"
      },
      {
        "name": "system-resource",
        "description": "System Resource"
      },
      {
        "name": "system-user-resource",
        "description": "System User Resource"
      },
      {
        "name": "task-failure-resource-api",
        "description": "Contains task failure reason endpoints"
      },
      {
        "name": "task-resource",
        "description": "Task Resource"
      }
    ],
    "paths": {
      "/api/assets": {
        "get": {
          "tags": [
            "asset-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_2",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ACTIVE",
                "IN_ACTIVE",
                "IN_SHOP",
                "OUT_OF_SERVICE",
                "SOLD"
              ]
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "groupIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "trackable",
              "in": "query",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«AssetDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "asset-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_1",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "assetPayloadDto",
              "description": "assetPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AssetPostPayloadDto"
              }
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "asset-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_1",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "assetPayloadDto",
              "description": "assetPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AssetPutPayloadDto"
              }
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/disable-temp/{id}": {
        "delete": {
          "tags": [
            "asset-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_2",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/positions": {
        "get": {
          "tags": [
            "asset-resource"
          ],
          "summary": "listPositions",
          "operationId": "listPositionsUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ACTIVE",
                "IN_ACTIVE",
                "IN_SHOP",
                "OUT_OF_SERVICE",
                "SOLD"
              ]
            },
            {
              "name": "assetSubTypeId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "assetTypeId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "driverFilter.driverId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "driverFilter.driverMobileNumber",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "driverFilter.driverName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "plate",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«AssetTrackablePositionDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/{assetId}/expenses": {
        "get": {
          "tags": [
            "asset-expenses-with-asset-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "path",
              "description": "assetId",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "costValue",
              "in": "query",
              "required": false,
              "type": "number"
            },
            {
              "name": "expensesTypeId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "maxCostValue",
              "in": "query",
              "required": false,
              "type": "number"
            },
            {
              "name": "minCostValue",
              "in": "query",
              "required": false,
              "type": "number"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«AssetExpensesDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "asset-expenses-with-asset-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "assetExpensesPostPayloadDto",
              "description": "assetExpensesPostPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AssetExpensesPostPayloadDto"
              }
            },
            {
              "name": "assetId",
              "in": "path",
              "description": "assetId",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetExpensesDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "asset-expenses-with-asset-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "path",
              "description": "assetId",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "assetPayloadDto",
              "description": "assetPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AssetExpensesPutPayloadDto"
              }
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetExpensesDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/{assetId}/expenses/disable-temp/{id}": {
        "delete": {
          "tags": [
            "asset-expenses-with-asset-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/{id}": {
        "get": {
          "tags": [
            "asset-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/{id}/stops": {
        "get": {
          "tags": [
            "asset-resource"
          ],
          "summary": "listAssetStops",
          "operationId": "listAssetStopsUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "in": "query",
              "description": "from",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "to",
              "in": "query",
              "description": "to",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Stops"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/assets/{id}/trips": {
        "get": {
          "tags": [
            "asset-resource"
          ],
          "summary": "listAssetTrips",
          "operationId": "listAssetTripsUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "from",
              "in": "query",
              "description": "from",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "to",
              "in": "query",
              "description": "to",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Trip"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/auth/refresh": {
        "get": {
          "tags": [
            "refresh-token-endpoint"
          ],
          "summary": "refreshToken",
          "operationId": "refreshTokenUsingGET",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/companies": {
        "get": {
          "tags": [
            "company-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_3",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«CompanyDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "company-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_2",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "companyPayloadDto",
              "description": "companyPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CompanyPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CompanyDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "company-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_2",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "companyPutPayloadDto",
              "description": "companyPutPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CompanyPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CompanyDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/companies/disable-temp/{id}": {
        "delete": {
          "tags": [
            "company-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_3",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/companies/{companyId}/admins": {
        "post": {
          "tags": [
            "company-admins-resource"
          ],
          "summary": "assignCompanyAdmin",
          "operationId": "assignCompanyAdminUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "path",
              "description": "companyId",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "in": "body",
              "name": "systemUserAdminPostDto",
              "description": "systemUserAdminPostDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SystemUserAdminPostDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/companies/{companyId}/assets": {
        "get": {
          "tags": [
            "company-resource"
          ],
          "summary": "getCompanyAssets",
          "operationId": "getCompanyAssetsUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "path",
              "description": "companyId",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/companies/{companyId}/employees": {
        "get": {
          "tags": [
            "company-resource"
          ],
          "summary": "getCompanyEmployees",
          "operationId": "getCompanyEmployeesUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "path",
              "description": "companyId",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/companies/{id}": {
        "get": {
          "tags": [
            "company-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_2",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CompanyDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/customer-hooks": {
        "get": {
          "tags": [
            "customer-hook-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_4",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "endpoint",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "notificationAction",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "TASK_HAS_BEEN_ASSIGNED",
                "TASK_STATUS_UPDATED_TO_ARRIVED_ON_DC",
                "TASK_STATUS_UPDATED_TO_OUT_FOR_DELIVERY",
                "TASK_STATUS_UPDATED_TO_PICKED_UP",
                "TASK_STATUS_UPDATED_TO_IN_TRANSIT",
                "TASK_STATUS_UPDATED_TO_DELIVERED",
                "TASK_STATUS_UPDATED_TO_FAILED",
                "TASK_STATUS_UPDATED_TO_CANCELED"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«CustomerHookDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "customer-hook-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_3",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "customerHookPayloadDto",
              "description": "customerHookPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CustomerHookPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "customer-hook-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_3",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "customerHookPayloadDto",
              "description": "customerHookPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CustomerHookPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomerHookDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/customer-hooks/disable-temp/{id}": {
        "delete": {
          "tags": [
            "customer-hook-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_4",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/customer-hooks/{id}": {
        "get": {
          "tags": [
            "customer-hook-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_3",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomerHookDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/customers": {
        "get": {
          "tags": [
            "customer-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_5",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«CustomerDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "customer-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_4",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "customerPayloadDto",
              "description": "customerPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CustomerPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomerDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "customer-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_4",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "customerPutPayloadDto",
              "description": "customerPutPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CustomerPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomerDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/customers/disable-temp/{id}": {
        "delete": {
          "tags": [
            "customer-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_5",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/departments": {
        "get": {
          "tags": [
            "department-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_6",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetsIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "employeesIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "salesOrdersIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«DepartmentDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "department-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_5",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "departmentPayloadDto",
              "description": "departmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DepartmentPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/DepartmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "department-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_5",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "departmentPayloadDto",
              "description": "departmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DepartmentPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/DepartmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/departments/disable-temp/{id}": {
        "delete": {
          "tags": [
            "department-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_6",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/employees": {
        "get": {
          "tags": [
            "employee-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_7",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "groupIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "trackable",
              "in": "query",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«EmployeeDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "employee-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_6",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "employeePayloadDto",
              "description": "employeePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/EmployeePostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/EmployeeDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "employee-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_6",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "employeePutPayloadDto",
              "description": "employeePutPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/EmployeePutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/EmployeeDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/employees/disable-temp/{id}": {
        "delete": {
          "tags": [
            "employee-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_7",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/employees/positions": {
        "get": {
          "tags": [
            "employee-resource"
          ],
          "summary": "listPositions",
          "operationId": "listPositionsUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ACTIVE",
                "IN_ACTIVE",
                "IN_SHOP",
                "OUT_OF_SERVICE",
                "SOLD"
              ]
            },
            {
              "name": "assetSubTypeId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "assetTypeId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "driverFilter.driverId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "driverFilter.driverMobileNumber",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "driverFilter.driverName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "groupIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "plate",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "query",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "trackable",
              "in": "query",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«EmployeeTrackablePositionDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/employees/{id}": {
        "get": {
          "tags": [
            "employee-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_4",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/EmployeeDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses": {
        "get": {
          "tags": [
            "asset-expenses-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "costValue",
              "in": "query",
              "required": false,
              "type": "number"
            },
            {
              "name": "expensesTypeId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "maxCostValue",
              "in": "query",
              "required": false,
              "type": "number"
            },
            {
              "name": "minCostValue",
              "in": "query",
              "required": false,
              "type": "number"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«AssetExpensesDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses-types": {
        "get": {
          "tags": [
            "expenses-type-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_8",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ExpensesTypeDto"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "expenses-type-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_7",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "expensesTypePayloadDto",
              "description": "expensesTypePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ExpensesTypePostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ExpensesTypeDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "expenses-type-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_7",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "expensesTypePayloadDto",
              "description": "expensesTypePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ExpensesTypePutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ExpensesTypeDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses-types/disable-temp/{id}": {
        "delete": {
          "tags": [
            "expenses-type-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_8",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses-types/{id}": {
        "get": {
          "tags": [
            "expenses-type-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_5",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ExpensesTypeDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses/counts": {
        "get": {
          "tags": [
            "asset-expenses-resource"
          ],
          "summary": "loadCounts",
          "operationId": "loadCountsUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetExpensesChartDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses/disable-temp/{id}": {
        "delete": {
          "tags": [
            "asset-expenses-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/expenses/{id}": {
        "get": {
          "tags": [
            "asset-expenses-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetExpensesDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/geofences": {
        "get": {
          "tags": [
            "geofence-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_9",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "CIRCLE",
                "POLYGON"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«GeofenceDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "geofence-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_8",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "geofencePayloadDto",
              "description": "geofencePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GeofencePostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeofenceDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "geofence-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_8",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "geofencePayloadDto",
              "description": "geofencePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GeofencePutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeofenceDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/geofences/disable-temp/{id}": {
        "delete": {
          "tags": [
            "geofence-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_9",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/geofences/import": {
        "post": {
          "tags": [
            "geofence-resource"
          ],
          "summary": "bulkImportGeofences",
          "operationId": "bulkImportGeofencesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "importedDataPostPayloadDto",
              "description": "importedDataPostPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CsvImportPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/geofences/{id}": {
        "get": {
          "tags": [
            "geofence-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_6",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeofenceDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/grid-filters": {
        "get": {
          "tags": [
            "grid-filter-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_10",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "authenticated",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "authorities[0].authority",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "credentials",
              "in": "query",
              "required": false,
              "type": "object"
            },
            {
              "name": "details",
              "in": "query",
              "required": false,
              "type": "object"
            },
            {
              "name": "model",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "TASK",
                "REPAIR_ORDER",
                "ISSUE",
                "ASSET",
                "EMPLOYEE",
                "COMPANY",
                "GROUP",
                "SYSTEM_USER",
                "CUSTOMER",
                "EXPENSES",
                "PLANNING_BATCH",
                "SHIFT_ASSIGNMENT",
                "SHIFT",
                "PICKUP_ASSIGNMENT",
                "SHIPMENT_CATEGORY",
                "GEOFENCE",
                "DEPARTMENT",
                "GRID_FILTER",
                "HUB",
                "IMPORTED_DATA",
                "PICKUP_SESSION"
              ]
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "principal",
              "in": "query",
              "required": false,
              "type": "object"
            },
            {
              "name": "queryParam",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«GridFilterDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "grid-filter-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_9",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "gridFilterPayloadDto",
              "description": "gridFilterPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GridFilterPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GridFilterDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "grid-filter-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_9",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "gridFilterPayloadDto",
              "description": "gridFilterPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GridFilterPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GridFilterDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/grid-filters/disable-temp/{id}": {
        "delete": {
          "tags": [
            "grid-filter-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_10",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/grid-filters/{id}": {
        "get": {
          "tags": [
            "grid-filter-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_7",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GridFilterDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/groups": {
        "get": {
          "tags": [
            "group-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_11",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "deleted",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "id",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«GroupDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "group-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_10",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "groupPayloadDto",
              "description": "groupPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GroupPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GroupDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "group-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_10",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "groupPayloadDto",
              "description": "groupPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GroupPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GroupDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/groups/disable-temp/{id}": {
        "delete": {
          "tags": [
            "group-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_11",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/groups/{groupId}/assets": {
        "get": {
          "tags": [
            "group-resource"
          ],
          "summary": "getCompanyAssets",
          "operationId": "getCompanyAssetsUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "groupId",
              "in": "path",
              "description": "groupId",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/groups/{groupId}/employees": {
        "get": {
          "tags": [
            "group-resource"
          ],
          "summary": "getCompanyEmployees",
          "operationId": "getCompanyEmployeesUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "groupId",
              "in": "path",
              "description": "groupId",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/groups/{id}": {
        "get": {
          "tags": [
            "group-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_8",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GroupDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/hubs": {
        "get": {
          "tags": [
            "hub-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_12",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "cityTags",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«HubDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "hub-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_11",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "hubPayloadDto",
              "description": "hubPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/HubPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/HubDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "hub-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_11",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "hubPayloadDto",
              "description": "hubPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/HubPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/HubDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/hubs/disable-temp/{id}": {
        "delete": {
          "tags": [
            "hub-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_12",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/hubs/{id}": {
        "get": {
          "tags": [
            "hub-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_9",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/HubDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/imported-data": {
        "get": {
          "tags": [
            "imported-data-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_13",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "entityType",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "TASK",
                "REPAIR_ORDER",
                "ISSUE",
                "ASSET",
                "EMPLOYEE",
                "COMPANY",
                "GROUP",
                "SYSTEM_USER",
                "CUSTOMER",
                "EXPENSES",
                "PLANNING_BATCH",
                "SHIFT_ASSIGNMENT",
                "SHIFT",
                "PICKUP_ASSIGNMENT",
                "SHIPMENT_CATEGORY",
                "GEOFENCE",
                "DEPARTMENT",
                "GRID_FILTER",
                "HUB",
                "IMPORTED_DATA",
                "PICKUP_SESSION"
              ]
            },
            {
              "name": "failed",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "importStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "title",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "uploadStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«ImportedDataDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/imported-data/disable-temp/{id}": {
        "delete": {
          "tags": [
            "imported-data-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_13",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/imported-data/{id}": {
        "get": {
          "tags": [
            "imported-data-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_10",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ImportedDataDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/issues": {
        "get": {
          "tags": [
            "issue-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_14",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "insuranceStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "OPEN",
                "SUBMITTED",
                "APPROVED",
                "REJECTED"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "OPEN",
                "OVERDUE",
                "RESOLVED",
                "CLOSED"
              ]
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "REGULAR",
                "ACCIDENT"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«IssueDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "issue-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_12",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "issuePayloadDto",
              "description": "issuePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/IssuePostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/IssueDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "issue-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_12",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "issuePayloadDto",
              "description": "issuePayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/IssuePutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/IssueDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/issues/asset/{assetId}": {
        "get": {
          "tags": [
            "issue-resource"
          ],
          "summary": "listByAsset",
          "operationId": "listByAssetUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "path",
              "description": "assetId",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "insuranceStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "OPEN",
                "SUBMITTED",
                "APPROVED",
                "REJECTED"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "OPEN",
                "OVERDUE",
                "RESOLVED",
                "CLOSED"
              ]
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "REGULAR",
                "ACCIDENT"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«IssueDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/issues/counts": {
        "get": {
          "tags": [
            "issue-resource"
          ],
          "summary": "loadCounts",
          "operationId": "loadCountsUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/IssueChartDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/issues/disable-temp/{id}": {
        "delete": {
          "tags": [
            "issue-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_14",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/issues/{id}": {
        "get": {
          "tags": [
            "issue-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_11",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/IssueDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/legalDocuments": {
        "get": {
          "tags": [
            "legal-document-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_15",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetsIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "employeesIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "salesOrdersIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«DepartmentDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "legal-document-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_13",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "departmentPayloadDto",
              "description": "departmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DepartmentPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/DepartmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "legal-document-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_13",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "departmentPayloadDto",
              "description": "departmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DepartmentPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/DepartmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/legalDocuments/disable-temp/{id}": {
        "delete": {
          "tags": [
            "legal-document-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_15",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/lookups": {
        "get": {
          "tags": [
            "lookup-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_16",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/LookupsDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/lookups/countries": {
        "get": {
          "tags": [
            "lookup-resource"
          ],
          "summary": "listCountries",
          "operationId": "listCountriesUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/CountryDto"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/lookups/system-roles": {
        "get": {
          "tags": [
            "lookup-resource"
          ],
          "summary": "listRoles",
          "operationId": "listRolesUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/RoleDto"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/config": {
        "get": {
          "tags": [
            "netsuite-config-resource"
          ],
          "summary": "get",
          "operationId": "getUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "delete": {
          "tags": [
            "netsuite-config-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_16",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync": {
        "get": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "getLogData",
          "operationId": "getLogDataUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/NetsuiteSyncEntityAuditDto"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/assetAssignments": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncAssetAssignments",
          "operationId": "syncAssetAssignmentsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/assets": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncAssets",
          "operationId": "syncAssetsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/companies": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncCompanies",
          "operationId": "syncCompaniesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/consignments": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncConsignemts",
          "operationId": "syncConsignemtsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/customers": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncCustomers",
          "operationId": "syncCustomersUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/departments": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncDepartments",
          "operationId": "syncDepartmentsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/employees": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncEmployees",
          "operationId": "syncEmployeesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/geofences": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncGeofences",
          "operationId": "syncGeofencesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/groups": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncGroups",
          "operationId": "syncGroupsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/locations": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncLocations",
          "operationId": "syncLocationsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/netsuite/sync/salesorders": {
        "post": {
          "tags": [
            "netsuite-sync-resource"
          ],
          "summary": "syncSalesOrder",
          "operationId": "syncSalesOrderUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteSyncResponse"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/pickup-assignments": {
        "get": {
          "tags": [
            "pickup-assignment-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_17",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerEmail",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "dayOfWeek",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "driverEmail",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "driverIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "geofenceIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "geofenceName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«PickupAssignmentDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "pickup-assignment-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_14",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "pickupAssignmentPayloadDto",
              "description": "pickupAssignmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PickupAssignmentPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PickupAssignmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "pickup-assignment-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_14",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "pickupAssignmentPayloadDto",
              "description": "pickupAssignmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PickupAssignmentPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PickupAssignmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/pickup-assignments/disable-temp/{id}": {
        "delete": {
          "tags": [
            "pickup-assignment-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_17",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/pickup-assignments/{id}": {
        "get": {
          "tags": [
            "pickup-assignment-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_12",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PickupAssignmentDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/pickup-sessions": {
        "get": {
          "tags": [
            "pickup-session-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_18",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "driverIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ended",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«PickupSessionDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "pickup-session-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_15",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "pickupSessionPayloadDto",
              "description": "pickupSessionPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PickupSessionPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PickupSessionDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/pickup-sessions/disable-temp/{id}": {
        "delete": {
          "tags": [
            "pickup-session-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_18",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/pickup-sessions/{id}": {
        "get": {
          "tags": [
            "pickup-session-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_13",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PickupSessionDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "patch": {
          "tags": [
            "pickup-session-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPATCH",
          "consumes": [
            "application/merge-patch+json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "mergePatchDocument",
              "description": "mergePatchDocument",
              "required": true,
              "schema": {
                "$ref": "#/definitions/JsonMergePatch"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PickupSessionDto"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/planning-batches": {
        "get": {
          "tags": [
            "planning-batch-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_19",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "deliveryDate",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryDateFrom",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryDateTo",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«PlanningBatchDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "planning-batch-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_16",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "planningBatchPayloadDto",
              "description": "planningBatchPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PlanningBatchPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PlanningBatchDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "planning-batch-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_15",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "planningBatchPayloadDto",
              "description": "planningBatchPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/PlanningBatchPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PlanningBatchDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/planning-batches/disable-temp/{id}": {
        "delete": {
          "tags": [
            "planning-batch-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_19",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/planning-batches/{id}": {
        "get": {
          "tags": [
            "planning-batch-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_14",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PlanningBatchDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/public/info": {
        "get": {
          "tags": [
            "public-resource"
          ],
          "summary": "getTenant",
          "operationId": "getTenantUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TenantDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/repairOrders": {
        "get": {
          "tags": [
            "repair-order-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_20",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "approvalStatus",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "OPEN",
                "PENDING",
                "APPROVED",
                "REJECTED"
              ]
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "assetName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "OPEN",
                "PENDING",
                "COMPLETED",
                "CANCELED"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«RepairOrderDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "repair-order-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_17",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "repairOrderPayloadDto",
              "description": "repairOrderPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RepairOrderPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/RepairOrderDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "repair-order-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_16",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "repairOrderPayloadDto",
              "description": "repairOrderPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RepairOrderPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/RepairOrderDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/repairOrders/counts": {
        "get": {
          "tags": [
            "repair-order-resource"
          ],
          "summary": "loadCounts",
          "operationId": "loadCountsUsingGET_2",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/RepairOrderChartDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/repairOrders/disable-temp/{id}": {
        "delete": {
          "tags": [
            "repair-order-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_20",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/repairOrders/{id}": {
        "get": {
          "tags": [
            "repair-order-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_15",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/RepairOrderDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/s3/pre-signed": {
        "get": {
          "tags": [
            "aws-resource"
          ],
          "summary": "getPreSignedURL",
          "operationId": "getPreSignedURLUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "contentType",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "model",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "TASK",
                "REPAIR_ORDER",
                "ISSUE",
                "ASSET",
                "EMPLOYEE",
                "COMPANY",
                "GROUP",
                "SYSTEM_USER",
                "CUSTOMER",
                "EXPENSES",
                "PLANNING_BATCH",
                "SHIFT_ASSIGNMENT",
                "SHIFT",
                "PICKUP_ASSIGNMENT",
                "SHIPMENT_CATEGORY",
                "GEOFENCE",
                "DEPARTMENT",
                "GRID_FILTER",
                "HUB",
                "IMPORTED_DATA",
                "PICKUP_SESSION"
              ]
            },
            {
              "name": "objectKey",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "string"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/sales-orders": {
        "get": {
          "tags": [
            "sales-order-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_21",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "dealDate",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "salesOrderType",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "DELIVERY",
                "RENTAL"
              ]
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«SalesOrderDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "sales-order-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_18",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "salesOrderPostPayloadDto",
              "description": "salesOrderPostPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SalesOrderPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/SalesOrderDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "sales-order-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_17",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "salesOrderPutPayloadDto",
              "description": "salesOrderPutPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SalesOrderPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/SalesOrderDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/sales-orders/disable-temp/{id}": {
        "delete": {
          "tags": [
            "sales-order-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_21",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/shift-assignments": {
        "get": {
          "tags": [
            "shift-assignment-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_22",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "dayOfWeek",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "driverId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "helperId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "shipmentCategoryId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«ShiftAssignmentDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "shift-assignment-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_19",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shiftAssignmentPayloadDto",
              "description": "shiftAssignmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShiftAssignmentPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftAssignmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "shift-assignment-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_18",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shiftAssignmentPayloadDto",
              "description": "shiftAssignmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShiftAssignmentPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftAssignmentDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shift-assignments/disable-temp/{id}": {
        "delete": {
          "tags": [
            "shift-assignment-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_22",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/shift-assignments/trigger": {
        "post": {
          "tags": [
            "shift-assignment-resource"
          ],
          "summary": "triggerShiftCreation",
          "operationId": "triggerShiftCreationUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shiftAssignmentPayloadDto",
              "description": "shiftAssignmentPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShiftAssignmentPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shift-assignments/{id}": {
        "get": {
          "tags": [
            "shift-assignment-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_16",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftAssignmentDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shifts": {
        "get": {
          "tags": [
            "shift-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_23",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "assetId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "date",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "driverId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "helperId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "leastRemainingCapacity",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "shipmentCategoryId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«ShiftDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "shift-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_20",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shiftPayloadDto",
              "description": "shiftPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShiftPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "shift-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_19",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shiftPayloadDto",
              "description": "shiftPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShiftPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shifts/disable-temp/{id}": {
        "delete": {
          "tags": [
            "shift-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_23",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/shifts/{id}": {
        "get": {
          "tags": [
            "shift-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_17",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "patch": {
          "tags": [
            "shift-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPATCH_1",
          "consumes": [
            "application/merge-patch+json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "mergePatchDocument",
              "description": "mergePatchDocument",
              "required": true,
              "schema": {
                "$ref": "#/definitions/JsonMergePatch"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShiftDto"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/shipment-categories": {
        "get": {
          "tags": [
            "shipment-category-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_24",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«ShipmentCategoryDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "shipment-category-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_21",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shipmentCategoryPayloadDto",
              "description": "shipmentCategoryPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShipmentCategoryPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShipmentCategoryDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "shipment-category-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_20",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shipmentCategoryPayloadDto",
              "description": "shipmentCategoryPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShipmentCategoryPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShipmentCategoryDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shipment-categories/disable-temp/{id}": {
        "delete": {
          "tags": [
            "shipment-category-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_24",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/shipment-categories/{id}": {
        "get": {
          "tags": [
            "shipment-category-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_18",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShipmentCategoryDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shipment-packages": {
        "put": {
          "tags": [
            "shipment-package-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_21",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shipmentPackagePutPayloadDto",
              "description": "shipmentPackagePutPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShipmentPackagePutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShipmentPackageDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shipment-packages/update-status": {
        "post": {
          "tags": [
            "shipment-package-resource"
          ],
          "summary": "updateStatus",
          "operationId": "updateStatusUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "shipmentPackageUpdateStatusPostPayloadDto",
              "description": "shipmentPackageUpdateStatusPostPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ShipmentPackageUpdateStatusPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/shipment-packages/{id}": {
        "get": {
          "tags": [
            "shipment-package-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_19",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ShipmentPackageDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/system/admins": {
        "post": {
          "tags": [
            "system-admins-resource"
          ],
          "summary": "saveSystemAdmins",
          "operationId": "saveSystemAdminsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "systemUserAdminPostDto",
              "description": "systemUserAdminPostDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SystemUserAdminPostDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/system/info": {
        "get": {
          "tags": [
            "system-resource"
          ],
          "summary": "getTenant",
          "operationId": "getTenantUsingGET_1",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TenantDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": true
        },
        "put": {
          "tags": [
            "system-resource"
          ],
          "summary": "saveTenantData",
          "operationId": "saveTenantDataUsingPUT",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "tenantDataPutDto",
              "description": "tenantDataPutDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TenantDataPutDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/system/shifts/daily-generate": {
        "post": {
          "tags": [
            "system-resource"
          ],
          "summary": "generateDailyShifts",
          "operationId": "generateDailyShiftsUsingPOST",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "forceContinue",
              "in": "formData",
              "description": "forceContinue",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/system/tenants": {
        "post": {
          "tags": [
            "system-resource"
          ],
          "summary": "registerTenant",
          "operationId": "registerTenantUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "tenantMicroserviceDto",
              "description": "tenantMicroserviceDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TenantMicroserviceDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/system/test": {
        "get": {
          "tags": [
            "system-resource"
          ],
          "summary": "test",
          "operationId": "testUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/NetsuiteConfig"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/task-failure-reasons": {
        "get": {
          "tags": [
            "task-failure-resource-api"
          ],
          "summary": "list",
          "operationId": "listUsingGET_26",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "reason",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "visibleToDriver",
              "in": "query",
              "required": false,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«TaskFailureReasonDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "task-failure-resource-api"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_22",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "taskFailureReasonPayloadDto",
              "description": "taskFailureReasonPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TaskFailureReasonPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskFailureReasonDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "task-failure-resource-api"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_23",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "taskFailureReasonPayloadDto",
              "description": "taskFailureReasonPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TaskFailureReasonPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskFailureReasonDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/task-failure-reasons/disable-temp/{id}": {
        "delete": {
          "tags": [
            "task-failure-resource-api"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_26",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/task-failure-reasons/{id}": {
        "get": {
          "tags": [
            "task-failure-resource-api"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_21",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskFailureReasonDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks": {
        "get": {
          "tags": [
            "task-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_27",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "awbs",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "consignee.city",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.countryName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.district",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.geofenceName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.geofencesIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "consignee.hasGeofences",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "consignee.name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.phone",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "deliveryAfterTime.hour",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.minute",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.nano",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.second",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.hour",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.minute",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.nano",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.second",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryDateFrom",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryDateTo",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryType",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "SAME_DAY",
                "NEXT_DAY",
                "EXPRESS"
              ]
            },
            {
              "name": "driverIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "failureReasonComment",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "hasDriver",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "hasOpenStatus",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "hubsIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "shipmentPackageId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "shipmentPackageState",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "NORMAL",
                "DIFFERENT_STATUS",
                "ZERO_PACKAGES"
              ]
            },
            {
              "name": "shipmentPackageTrackingId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "smsNotifications",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "statuses",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDERED",
                  "DELIVERED",
                  "CANCELED",
                  "FAILED",
                  "IN_TRANSIT",
                  "PICKED_UP",
                  "ARRIVED_IN_DC",
                  "OUT_FOR_DELIVERY",
                  "PROCESS_FOR_RETURN",
                  "RETURNED_TO_SHIPPER",
                  "HUB_TRANSFER",
                  "RESCHEDULED",
                  "REATTEMPT",
                  "RETURNED_TO_DC"
                ]
              },
              "collectionFormat": "multi",
              "enum": [
                "ORDERED",
                "DELIVERED",
                "CANCELED",
                "FAILED",
                "IN_TRANSIT",
                "PICKED_UP",
                "ARRIVED_IN_DC",
                "OUT_FOR_DELIVERY",
                "PROCESS_FOR_RETURN",
                "RETURNED_TO_SHIPPER",
                "HUB_TRANSFER",
                "RESCHEDULED",
                "REATTEMPT",
                "RETURNED_TO_DC"
              ]
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "DELIVERY",
                "COLLECTION"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«TaskDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "task-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_24",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "taskPayloadDto",
              "description": "taskPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TaskPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/bulk-update/{ids}": {
        "patch": {
          "tags": [
            "task-resource"
          ],
          "summary": "updateAll",
          "operationId": "updateAllUsingPATCH",
          "consumes": [
            "application/merge-patch+json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "ids",
              "in": "path",
              "description": "ids",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "mergePatchDocument",
              "description": "mergePatchDocument",
              "required": true,
              "schema": {
                "$ref": "#/definitions/JsonMergePatch"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/count": {
        "get": {
          "tags": [
            "task-resource"
          ],
          "summary": "getCount",
          "operationId": "getCountUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "awbs",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "consignee.city",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.countryName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.district",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.geofenceName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.geofencesIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "consignee.hasGeofences",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "consignee.name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.phone",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "deliveryAfterTime.hour",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.minute",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.nano",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.second",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.hour",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.minute",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.nano",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.second",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryDateFrom",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryDateTo",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryType",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "SAME_DAY",
                "NEXT_DAY",
                "EXPRESS"
              ]
            },
            {
              "name": "driverIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "failureReasonComment",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "hasDriver",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "hasOpenStatus",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "hubsIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "shipmentPackageId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "shipmentPackageState",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "NORMAL",
                "DIFFERENT_STATUS",
                "ZERO_PACKAGES"
              ]
            },
            {
              "name": "shipmentPackageTrackingId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "smsNotifications",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "statuses",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDERED",
                  "DELIVERED",
                  "CANCELED",
                  "FAILED",
                  "IN_TRANSIT",
                  "PICKED_UP",
                  "ARRIVED_IN_DC",
                  "OUT_FOR_DELIVERY",
                  "PROCESS_FOR_RETURN",
                  "RETURNED_TO_SHIPPER",
                  "HUB_TRANSFER",
                  "RESCHEDULED",
                  "REATTEMPT",
                  "RETURNED_TO_DC"
                ]
              },
              "collectionFormat": "multi",
              "enum": [
                "ORDERED",
                "DELIVERED",
                "CANCELED",
                "FAILED",
                "IN_TRANSIT",
                "PICKED_UP",
                "ARRIVED_IN_DC",
                "OUT_FOR_DELIVERY",
                "PROCESS_FOR_RETURN",
                "RETURNED_TO_SHIPPER",
                "HUB_TRANSFER",
                "RESCHEDULED",
                "REATTEMPT",
                "RETURNED_TO_DC"
              ]
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "DELIVERY",
                "COLLECTION"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CountDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/disable-temp/bulk-delete/{ids}": {
        "delete": {
          "tags": [
            "task-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_27",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "ids",
              "in": "path",
              "description": "ids",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/disable-temp/{id}": {
        "delete": {
          "tags": [
            "task-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_28",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/execute-planning": {
        "post": {
          "tags": [
            "task-resource"
          ],
          "summary": "create",
          "operationId": "createUsingPOST_23",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "taskPlanningExecutionPayloadDto",
              "description": "taskPlanningExecutionPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TaskPlanningExecutionPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PlanningBatchDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/export": {
        "post": {
          "tags": [
            "task-resource"
          ],
          "summary": "export",
          "operationId": "exportUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "taskExportPayloadDto",
              "description": "taskExportPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TaskExportPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Resource"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/import": {
        "post": {
          "tags": [
            "task-resource"
          ],
          "summary": "bulkImportTasks",
          "operationId": "bulkImportTasksUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "taskImportPostPayloadDto",
              "description": "taskImportPostPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TaskImportPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/stats": {
        "get": {
          "tags": [
            "task-resource"
          ],
          "summary": "getStats",
          "operationId": "getStatsUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "awbs",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "consignee.city",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.countryName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.district",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.geofenceName",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.geofencesIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "consignee.hasGeofences",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "consignee.name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "consignee.phone",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "customerIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "deliveryAfterTime.hour",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.minute",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.nano",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryAfterTime.second",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.hour",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.minute",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.nano",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryBeforeTime.second",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "deliveryDateFrom",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryDateTo",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date"
            },
            {
              "name": "deliveryType",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "SAME_DAY",
                "NEXT_DAY",
                "EXPRESS"
              ]
            },
            {
              "name": "driverIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "failureReasonComment",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "hasDriver",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "hasOpenStatus",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "hubsIds",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "collectionFormat": "multi"
            },
            {
              "name": "shipmentPackageId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "shipmentPackageState",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "NORMAL",
                "DIFFERENT_STATUS",
                "ZERO_PACKAGES"
              ]
            },
            {
              "name": "shipmentPackageTrackingId",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "smsNotifications",
              "in": "query",
              "required": false,
              "type": "boolean"
            },
            {
              "name": "statuses",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDERED",
                  "DELIVERED",
                  "CANCELED",
                  "FAILED",
                  "IN_TRANSIT",
                  "PICKED_UP",
                  "ARRIVED_IN_DC",
                  "OUT_FOR_DELIVERY",
                  "PROCESS_FOR_RETURN",
                  "RETURNED_TO_SHIPPER",
                  "HUB_TRANSFER",
                  "RESCHEDULED",
                  "REATTEMPT",
                  "RETURNED_TO_DC"
                ]
              },
              "collectionFormat": "multi",
              "enum": [
                "ORDERED",
                "DELIVERED",
                "CANCELED",
                "FAILED",
                "IN_TRANSIT",
                "PICKED_UP",
                "ARRIVED_IN_DC",
                "OUT_FOR_DELIVERY",
                "PROCESS_FOR_RETURN",
                "RETURNED_TO_SHIPPER",
                "HUB_TRANSFER",
                "RESCHEDULED",
                "REATTEMPT",
                "RETURNED_TO_DC"
              ]
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "DELIVERY",
                "COLLECTION"
              ]
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskStatsDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/{id}": {
        "get": {
          "tags": [
            "task-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_22",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "patch": {
          "tags": [
            "task-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPATCH_2",
          "consumes": [
            "application/merge-patch+json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "mergePatchDocument",
              "description": "mergePatchDocument",
              "required": true,
              "schema": {
                "$ref": "#/definitions/JsonMergePatch"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskDto"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/{taskId}/reschedule": {
        "post": {
          "tags": [
            "task-resource"
          ],
          "summary": "reschedule",
          "operationId": "rescheduleUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "rescheduleTaskPayloadDto",
              "description": "rescheduleTaskPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RescheduleTaskPayloadDto"
              }
            },
            {
              "name": "taskId",
              "in": "path",
              "description": "taskId",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/{taskId}/shipment-packages": {
        "get": {
          "tags": [
            "task-resource"
          ],
          "summary": "getShipmentPackages",
          "operationId": "getShipmentPackagesUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "taskId",
              "in": "path",
              "description": "taskId",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ShipmentPackageDto"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/tasks/{taskId}/task-activities": {
        "get": {
          "tags": [
            "task-resource"
          ],
          "summary": "getTimeline",
          "operationId": "getTimelineUsingGET",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "taskId",
              "in": "path",
              "description": "taskId",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TaskActivityDto"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/users": {
        "get": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "list",
          "operationId": "listUsingGET_25",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "companyId",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "email",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "name",
              "in": "query",
              "required": false,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "roles",
              "in": "query",
              "required": false,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SUPER_ADMIN",
                  "COMPANY_ADMIN",
                  "DRIVER",
                  "WAREHOUSE",
                  "CUSTOMER_ADMIN"
                ]
              },
              "collectionFormat": "multi",
              "enum": [
                "SUPER_ADMIN",
                "COMPANY_ADMIN",
                "DRIVER",
                "WAREHOUSE",
                "CUSTOMER_ADMIN"
              ]
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sortDirection",
              "in": "query",
              "required": false,
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            {
              "name": "sortProperty",
              "in": "query",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Page«SystemUserDto»"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "post": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "addSystemUser",
          "operationId": "addSystemUserUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "systemUserPostPayloadDto",
              "description": "systemUserPostPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SystemUserPostPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/SystemUserDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "update",
          "operationId": "updateUsingPUT_22",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "systemUserPutPayloadDto",
              "description": "systemUserPutPayloadDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SystemUserPutPayloadDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/SystemUserDto"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/users/disable-temp/{id}": {
        "delete": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "delete",
          "operationId": "deleteUsingDELETE_25",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "204": {
              "description": "No Content"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          },
          "deprecated": false
        }
      },
      "/api/users/forgotPassword": {
        "post": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "resetPassword",
          "operationId": "resetPasswordUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "query",
              "description": "email",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/users/resetPassword": {
        "post": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "resetPassword",
          "operationId": "resetPasswordUsingPOST_1",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "in": "body",
              "name": "resetPasswordDto",
              "description": "resetPasswordDto",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SystemUserResetPasswordDto"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseEntity"
              }
            },
            "201": {
              "description": "Created"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      },
      "/api/users/{id}": {
        "get": {
          "tags": [
            "system-user-resource"
          ],
          "summary": "getSingle",
          "operationId": "getSingleUsingGET_20",
          "produces": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "clientId",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/SystemUserDto"
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            }
          },
          "deprecated": false
        }
      }
    },
    "definitions": {
      "AmazonInformationDto": {
        "type": "object",
        "properties": {
          "amazonBusinessUnit": {
            "type": "string"
          },
          "amazonTaxId": {
            "type": "string"
          },
          "carrierAccountId": {
            "type": "string"
          },
          "carrierInternalId": {
            "type": "string"
          },
          "carrierManifestId": {
            "type": "string"
          },
          "cfcAmount": {
            "type": "number"
          },
          "cfcChargeOrAllowance": {
            "type": "string"
          },
          "cfcCurrency": {
            "type": "string"
          },
          "cifAmount": {
            "type": "number"
          },
          "cifChargeOrAllowance": {
            "type": "string"
          },
          "cifCurrency": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "fcAmount": {
            "type": "number"
          },
          "fcChargeOrAllowance": {
            "type": "string"
          },
          "fcCurrency": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "manifestCreateDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "manifestNumber": {
            "type": "string"
          },
          "prepaidCollect": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "shipmentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "shipmentMethod": {
            "type": "string"
          },
          "termOfSales": {
            "type": "string"
          },
          "vogAmount": {
            "type": "number"
          },
          "vogChargeOrAllowance": {
            "type": "string"
          },
          "vogCurrency": {
            "type": "string"
          },
          "whLocationId": {
            "type": "string"
          }
        },
        "title": "AmazonInformationDto"
      },
      "AmazonInformationPostPayloadDto": {
        "type": "object",
        "properties": {
          "amazonBusinessUnit": {
            "type": "string"
          },
          "amazonTaxId": {
            "type": "string"
          },
          "carrierAccountId": {
            "type": "string"
          },
          "carrierInternalId": {
            "type": "string"
          },
          "carrierManifestId": {
            "type": "string"
          },
          "cfcAmount": {
            "type": "number"
          },
          "cfcChargeOrAllowance": {
            "type": "string"
          },
          "cfcCurrency": {
            "type": "string"
          },
          "cifAmount": {
            "type": "number"
          },
          "cifChargeOrAllowance": {
            "type": "string"
          },
          "cifCurrency": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "fcAmount": {
            "type": "number"
          },
          "fcChargeOrAllowance": {
            "type": "string"
          },
          "fcCurrency": {
            "type": "string"
          },
          "manifestCreateDateTime": {
            "type": "string",
            "format": "date"
          },
          "manifestNumber": {
            "type": "string"
          },
          "prepaidCollect": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "shipmentDateTime": {
            "type": "string",
            "format": "date"
          },
          "shipmentMethod": {
            "type": "string"
          },
          "termOfSales": {
            "type": "string"
          },
          "vogAmount": {
            "type": "number"
          },
          "vogChargeOrAllowance": {
            "type": "string"
          },
          "vogCurrency": {
            "type": "string"
          },
          "whLocationId": {
            "type": "string"
          }
        },
        "title": "AmazonInformationPostPayloadDto"
      },
      "AssetDto": {
        "type": "object",
        "properties": {
          "accumulatedDepreciation": {
            "type": "string"
          },
          "assetStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "IN_ACTIVE",
              "IN_SHOP",
              "OUT_OF_SERVICE",
              "SOLD"
            ]
          },
          "assetSubType": {
            "$ref": "#/definitions/AssetSubTypeDto"
          },
          "assetType": {
            "$ref": "#/definitions/AssetTypeDto"
          },
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "currentCost": {
            "type": "number"
          },
          "deleted": {
            "type": "boolean"
          },
          "department": {
            "$ref": "#/definitions/DepartmentLiteDto"
          },
          "depreciationEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "depreciationStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "licensePlate": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "manufacturingCountry": {
            "type": "string"
          },
          "manufacturingYear": {
            "type": "integer",
            "format": "int32"
          },
          "mpn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "npv": {
            "type": "string"
          },
          "operators": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/EmployeeLiteDto"
            }
          },
          "originalCost": {
            "type": "number"
          },
          "owner": {
            "type": "boolean"
          },
          "photo": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "serialNumber": {
            "type": "string"
          },
          "trackingItem": {
            "$ref": "#/definitions/TrackingItemDto"
          }
        },
        "title": "AssetDto"
      },
      "AssetExpensesChartDto": {
        "type": "object",
        "properties": {
          "canceledCount": {
            "type": "integer",
            "format": "int64"
          },
          "completedCount": {
            "type": "integer",
            "format": "int64"
          },
          "openCount": {
            "type": "integer",
            "format": "int64"
          },
          "pendingCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "AssetExpensesChartDto"
      },
      "AssetExpensesDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "asset": {
            "$ref": "#/definitions/AssetLiteDto"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "costValue": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "expensesType": {
            "$ref": "#/definitions/ExpensesTypeDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "odometer": {
            "type": "number"
          },
          "reportedBy": {
            "$ref": "#/definitions/EmployeeLiteDto"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "vendor": {
            "type": "string"
          }
        },
        "title": "AssetExpensesDto"
      },
      "AssetExpensesPostPayloadDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "costValue": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "expensesTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "odometer": {
            "type": "number"
          },
          "reportedBy": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "vendor": {
            "type": "string"
          }
        },
        "title": "AssetExpensesPostPayloadDto"
      },
      "AssetExpensesPutPayloadDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "costValue": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "expensesTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "odometer": {
            "type": "number"
          },
          "reportedBy": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "vendor": {
            "type": "string"
          }
        },
        "title": "AssetExpensesPutPayloadDto"
      },
      "AssetLiteDto": {
        "type": "object",
        "properties": {
          "assetStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "IN_ACTIVE",
              "IN_SHOP",
              "OUT_OF_SERVICE",
              "SOLD"
            ]
          },
          "assetSubType": {
            "$ref": "#/definitions/AssetSubTypeDto"
          },
          "assetType": {
            "$ref": "#/definitions/AssetTypeDto"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "licensePlate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "boolean"
          },
          "photo": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "trackingItem": {
            "$ref": "#/definitions/TrackingItemDto"
          }
        },
        "title": "AssetLiteDto"
      },
      "AssetPostPayloadDto": {
        "type": "object",
        "properties": {
          "accumulatedDepreciation": {
            "type": "string"
          },
          "assetStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "IN_ACTIVE",
              "IN_SHOP",
              "OUT_OF_SERVICE",
              "SOLD"
            ]
          },
          "assetSubType": {
            "type": "integer",
            "format": "int32"
          },
          "assetType": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "currentCost": {
            "type": "number"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "depreciationEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "depreciationStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "deviceLocationIdentifier": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "licensePlate": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "manufacturingCountry": {
            "type": "string"
          },
          "manufacturingYear": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string"
          },
          "mpn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "npv": {
            "type": "string"
          },
          "operatorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "originalCost": {
            "type": "number"
          },
          "owner": {
            "type": "boolean"
          },
          "photo": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "serialNumber": {
            "type": "string"
          },
          "trackable": {
            "type": "boolean"
          }
        },
        "title": "AssetPostPayloadDto"
      },
      "AssetPutPayloadDto": {
        "type": "object",
        "properties": {
          "accumulatedDepreciation": {
            "type": "string"
          },
          "assetStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "IN_ACTIVE",
              "IN_SHOP",
              "OUT_OF_SERVICE",
              "SOLD"
            ]
          },
          "assetSubType": {
            "type": "integer",
            "format": "int32"
          },
          "assetType": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "currentCost": {
            "type": "number"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "depreciationEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "depreciationStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "deviceLocationIdentifier": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "licensePlate": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "manufacturingCountry": {
            "type": "string"
          },
          "manufacturingYear": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string"
          },
          "mpn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "npv": {
            "type": "string"
          },
          "operatorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "originalCost": {
            "type": "number"
          },
          "owner": {
            "type": "boolean"
          },
          "photo": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "serialNumber": {
            "type": "string"
          },
          "trackable": {
            "type": "boolean"
          }
        },
        "title": "AssetPutPayloadDto"
      },
      "AssetSubTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "AssetSubTypeDto"
      },
      "AssetTrackablePositionDto": {
        "type": "object",
        "properties": {
          "assetStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "IN_ACTIVE",
              "IN_SHOP",
              "OUT_OF_SERVICE",
              "SOLD"
            ]
          },
          "assetSubType": {
            "$ref": "#/definitions/AssetSubTypeDto"
          },
          "assetType": {
            "$ref": "#/definitions/AssetTypeDto"
          },
          "attributes": {
            "$ref": "#/definitions/Attributes"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceTime": {
            "type": "string"
          },
          "fixTime": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "licensePlate": {
            "type": "string"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "speed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "AssetTrackablePositionDto"
      },
      "AssetTypeDto": {
        "type": "object",
        "properties": {
          "assetSubTypes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetSubTypeDto"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "AssetTypeDto"
      },
      "Attributes": {
        "type": "object",
        "properties": {
          "batteryLevel": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "motion": {
            "type": "boolean"
          },
          "totalDistance": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "Attributes"
      },
      "CompanyDto": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/definitions/CountryDto"
          },
          "ctime": {
            "type": "string"
          },
          "forceScanning": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "loadAllTasks": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "smartGeotaggingEnabled": {
            "type": "boolean"
          },
          "utime": {
            "type": "string"
          }
        },
        "title": "CompanyDto"
      },
      "CompanyPostPayloadDto": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "forceScanning": {
            "type": "boolean"
          },
          "loadAllTasks": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "smartGeotaggingEnabled": {
            "type": "boolean"
          }
        },
        "title": "CompanyPostPayloadDto"
      },
      "CompanyPutPayloadDto": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "forceScanning": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "loadAllTasks": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "smartGeotaggingEnabled": {
            "type": "boolean"
          }
        },
        "title": "CompanyPutPayloadDto"
      },
      "ConsigneeLiteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "$ref": "#/definitions/LocationLiteDto"
          },
          "name": {
            "type": "string"
          },
          "shipAddressUsage": {
            "type": "string"
          },
          "taxId": {
            "type": "string"
          }
        },
        "title": "ConsigneeLiteDto"
      },
      "ConsigneePostPayloadDto": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/definitions/LocationPostPayloadDto"
          },
          "name": {
            "type": "string"
          },
          "shipAddressUsage": {
            "type": "string"
          },
          "taxId": {
            "type": "string"
          }
        },
        "title": "ConsigneePostPayloadDto"
      },
      "CountDto": {
        "type": "object",
        "properties": {
          "shipmentPackagesCount": {
            "type": "integer",
            "format": "int32"
          },
          "tasksCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "CountDto"
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "alpha2Code": {
            "type": "string"
          },
          "alpha3Code": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "numericCode": {
            "type": "integer",
            "format": "int32"
          },
          "timezone": {
            "type": "string"
          }
        },
        "title": "CountryDto"
      },
      "CsvImportPostPayloadDto": {
        "type": "object",
        "properties": {
          "s3key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "CsvImportPostPayloadDto"
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "$ref": "#/definitions/LocationDto"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "title": "CustomerDto"
      },
      "CustomerHookDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/definitions/CustomerLiteDto"
          },
          "endpoint": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "notificationAction": {
            "type": "string",
            "enum": [
              "TASK_HAS_BEEN_ASSIGNED",
              "TASK_STATUS_UPDATED_TO_ARRIVED_ON_DC",
              "TASK_STATUS_UPDATED_TO_OUT_FOR_DELIVERY",
              "TASK_STATUS_UPDATED_TO_PICKED_UP",
              "TASK_STATUS_UPDATED_TO_IN_TRANSIT",
              "TASK_STATUS_UPDATED_TO_DELIVERED",
              "TASK_STATUS_UPDATED_TO_FAILED",
              "TASK_STATUS_UPDATED_TO_CANCELED"
            ]
          }
        },
        "title": "CustomerHookDto"
      },
      "CustomerHookPostPayloadDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "endpoint": {
            "type": "string"
          },
          "notificationActions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK_HAS_BEEN_ASSIGNED",
                "TASK_STATUS_UPDATED_TO_ARRIVED_ON_DC",
                "TASK_STATUS_UPDATED_TO_OUT_FOR_DELIVERY",
                "TASK_STATUS_UPDATED_TO_PICKED_UP",
                "TASK_STATUS_UPDATED_TO_IN_TRANSIT",
                "TASK_STATUS_UPDATED_TO_DELIVERED",
                "TASK_STATUS_UPDATED_TO_FAILED",
                "TASK_STATUS_UPDATED_TO_CANCELED"
              ]
            }
          }
        },
        "title": "CustomerHookPostPayloadDto"
      },
      "CustomerHookPutPayloadDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "endpoint": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "notificationAction": {
            "type": "string",
            "enum": [
              "TASK_HAS_BEEN_ASSIGNED",
              "TASK_STATUS_UPDATED_TO_ARRIVED_ON_DC",
              "TASK_STATUS_UPDATED_TO_OUT_FOR_DELIVERY",
              "TASK_STATUS_UPDATED_TO_PICKED_UP",
              "TASK_STATUS_UPDATED_TO_IN_TRANSIT",
              "TASK_STATUS_UPDATED_TO_DELIVERED",
              "TASK_STATUS_UPDATED_TO_FAILED",
              "TASK_STATUS_UPDATED_TO_CANCELED"
            ]
          }
        },
        "title": "CustomerHookPutPayloadDto"
      },
      "CustomerLiteDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "title": "CustomerLiteDto"
      },
      "CustomerPostPayloadDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "location": {
            "$ref": "#/definitions/LocationPostPayloadDto"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "title": "CustomerPostPayloadDto"
      },
      "CustomerPutPayloadDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "$ref": "#/definitions/LocationPostPayloadDto"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "title": "CustomerPutPayloadDto"
      },
      "DeliveryInformationDto": {
        "type": "object",
        "properties": {
          "bagsReturned": {
            "type": "integer",
            "format": "int32"
          },
          "collectedAmount": {
            "type": "number"
          },
          "completionLatitude": {
            "type": "number",
            "format": "double"
          },
          "completionLongitude": {
            "type": "number",
            "format": "double"
          },
          "consigneeComment": {
            "type": "string"
          },
          "consigneeRating": {
            "type": "string"
          },
          "deliveryBoxes": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "deliveryEndTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryStartTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "driverComment": {
            "type": "string"
          },
          "failureReasonComment": {
            "type": "string"
          },
          "icePacksReturned": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "numberOfAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethod": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          },
          "recipientName": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "taskFailureReason": {
            "$ref": "#/definitions/TaskFailureReasonDto"
          }
        },
        "title": "DeliveryInformationDto"
      },
      "DeliveryInformationPayload": {
        "type": "object",
        "properties": {
          "bagsReturned": {
            "type": "integer",
            "format": "int32"
          },
          "collectedAmount": {
            "type": "number"
          },
          "completionLatitude": {
            "type": "number",
            "format": "double"
          },
          "completionLongitude": {
            "type": "number",
            "format": "double"
          },
          "consigneeComment": {
            "type": "string"
          },
          "consigneeRating": {
            "type": "string"
          },
          "deliveryBoxes": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "deliveryEndTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryStartTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "driverComment": {
            "type": "string"
          },
          "failureReasonComment": {
            "type": "string"
          },
          "icePacksReturned": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "numberOfAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethod": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          },
          "recipientName": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "taskFailureReasonId": {
            "type": "integer",
            "format": "int64"
          },
          "validDeliveryTime": {
            "type": "boolean"
          }
        },
        "title": "DeliveryInformationPayload"
      },
      "DeliveryInformationPostPayloadDto": {
        "type": "object",
        "properties": {
          "bagsReturned": {
            "type": "integer",
            "format": "int32"
          },
          "collectedAmount": {
            "type": "number"
          },
          "completionLatitude": {
            "type": "number",
            "format": "double"
          },
          "completionLongitude": {
            "type": "number",
            "format": "double"
          },
          "consigneeComment": {
            "type": "string"
          },
          "consigneeRating": {
            "type": "string"
          },
          "deliveryBoxes": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "deliveryEndTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryStartTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "driverComment": {
            "type": "string"
          },
          "failureReasonComment": {
            "type": "string"
          },
          "icePacksReturned": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethod": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          },
          "recipientName": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "taskFailureReasonId": {
            "type": "integer",
            "format": "int64"
          },
          "validDeliveryTime": {
            "type": "boolean"
          }
        },
        "title": "DeliveryInformationPostPayloadDto"
      },
      "DepartmentDto": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetDto"
            }
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/EmployeeDto"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "salesOrders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SalesOrderDto"
            }
          }
        },
        "title": "DepartmentDto"
      },
      "DepartmentLiteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "DepartmentLiteDto"
      },
      "DepartmentPostPayloadDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "title": "DepartmentPostPayloadDto"
      },
      "DepartmentPutPayloadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "DepartmentPutPayloadDto"
      },
      "EmployeeDto": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetLiteDto"
            }
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "ctime": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "department": {
            "$ref": "#/definitions/DepartmentLiteDto"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "hiringDate": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTitle": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "trackingItem": {
            "$ref": "#/definitions/TrackingItemDto"
          },
          "user": {
            "$ref": "#/definitions/SystemUserDto"
          },
          "utime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "EmployeeDto"
      },
      "EmployeeLiteDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTitle": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "trackingItem": {
            "$ref": "#/definitions/TrackingItemDto"
          }
        },
        "title": "EmployeeLiteDto"
      },
      "EmployeePostPayloadDto": {
        "type": "object",
        "properties": {
          "assetIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceLocationIdentifier": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "hiringDate": {
            "type": "string",
            "format": "date"
          },
          "jobTitle": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "trackable": {
            "type": "boolean"
          }
        },
        "title": "EmployeePostPayloadDto"
      },
      "EmployeePutPayloadDto": {
        "type": "object",
        "properties": {
          "assetIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "birthdate": {
            "type": "string",
            "format": "date"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceLocationIdentifier": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "hiringDate": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "jobTitle": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "managedEntitiesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "phoneNumber": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "trackable": {
            "type": "boolean"
          }
        },
        "title": "EmployeePutPayloadDto"
      },
      "EmployeeTrackablePositionDto": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/definitions/Attributes"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceTime": {
            "type": "string"
          },
          "fixTime": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "speed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "EmployeeTrackablePositionDto"
      },
      "ExpensesTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "ExpensesTypeDto"
      },
      "ExpensesTypePostPayloadDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "title": "ExpensesTypePostPayloadDto"
      },
      "ExpensesTypePutPayloadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "ExpensesTypePutPayloadDto"
      },
      "File": {
        "type": "object",
        "properties": {
          "absolute": {
            "type": "boolean"
          },
          "absoluteFile": {
            "$ref": "#/definitions/File"
          },
          "absolutePath": {
            "type": "string"
          },
          "canonicalFile": {
            "$ref": "#/definitions/File"
          },
          "canonicalPath": {
            "type": "string"
          },
          "directory": {
            "type": "boolean"
          },
          "file": {
            "type": "boolean"
          },
          "freeSpace": {
            "type": "integer",
            "format": "int64"
          },
          "hidden": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "parentFile": {
            "$ref": "#/definitions/File"
          },
          "path": {
            "type": "string"
          },
          "totalSpace": {
            "type": "integer",
            "format": "int64"
          },
          "usableSpace": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "File"
      },
      "GeofenceDto": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CIRCLE",
              "POLYGON"
            ]
          }
        },
        "title": "GeofenceDto"
      },
      "GeofencePostPayloadDto": {
        "type": "object",
        "discriminator": "type",
        "properties": {
          "area": {
            "$ref": "#/definitions/GeofenceShape"
          },
          "city": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CIRCLE",
              "POLYGON"
            ]
          }
        },
        "title": "GeofencePostPayloadDto",
        "description": "CIRCLE payload (https://jsonblob.com/b5bae7e5-41a0-11eb-bf6d-511dc6b5bf78) POLYGON payload https://jsonblob.com/ed21a4f5-41a0-11eb-bf6d-4528e255121b "
      },
      "GeofencePutPayloadDto": {
        "type": "object",
        "discriminator": "type",
        "properties": {
          "area": {
            "$ref": "#/definitions/GeofenceShape"
          },
          "city": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CIRCLE",
              "POLYGON"
            ]
          }
        },
        "title": "GeofencePutPayloadDto",
        "description": "CIRCLE payload (https://jsonblob.com/b5bae7e5-41a0-11eb-bf6d-511dc6b5bf78) POLYGON payload https://jsonblob.com/ed21a4f5-41a0-11eb-bf6d-4528e255121b "
      },
      "GeofenceShape": {
        "type": "object",
        "title": "GeofenceShape"
      },
      "GrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          }
        },
        "title": "GrantedAuthority"
      },
      "GridFilterDto": {
        "type": "object",
        "properties": {
          "gridSettings": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string",
            "enum": [
              "TASK",
              "REPAIR_ORDER",
              "ISSUE",
              "ASSET",
              "EMPLOYEE",
              "COMPANY",
              "GROUP",
              "SYSTEM_USER",
              "CUSTOMER",
              "EXPENSES",
              "PLANNING_BATCH",
              "SHIFT_ASSIGNMENT",
              "SHIFT",
              "PICKUP_ASSIGNMENT",
              "SHIPMENT_CATEGORY",
              "GEOFENCE",
              "DEPARTMENT",
              "GRID_FILTER",
              "HUB",
              "IMPORTED_DATA",
              "PICKUP_SESSION"
            ]
          },
          "name": {
            "type": "string"
          },
          "publicAccess": {
            "type": "boolean"
          },
          "queryParam": {
            "type": "string"
          }
        },
        "title": "GridFilterDto"
      },
      "GridFilterPostPayloadDto": {
        "type": "object",
        "properties": {
          "gridSettings": {
            "type": "string"
          },
          "model": {
            "type": "string",
            "enum": [
              "TASK",
              "REPAIR_ORDER",
              "ISSUE",
              "ASSET",
              "EMPLOYEE",
              "COMPANY",
              "GROUP",
              "SYSTEM_USER",
              "CUSTOMER",
              "EXPENSES",
              "PLANNING_BATCH",
              "SHIFT_ASSIGNMENT",
              "SHIFT",
              "PICKUP_ASSIGNMENT",
              "SHIPMENT_CATEGORY",
              "GEOFENCE",
              "DEPARTMENT",
              "GRID_FILTER",
              "HUB",
              "IMPORTED_DATA",
              "PICKUP_SESSION"
            ]
          },
          "name": {
            "type": "string"
          },
          "publicAccess": {
            "type": "boolean"
          },
          "queryParam": {
            "type": "string"
          }
        },
        "title": "GridFilterPostPayloadDto"
      },
      "GridFilterPutPayloadDto": {
        "type": "object",
        "properties": {
          "gridSettings": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string",
            "enum": [
              "TASK",
              "REPAIR_ORDER",
              "ISSUE",
              "ASSET",
              "EMPLOYEE",
              "COMPANY",
              "GROUP",
              "SYSTEM_USER",
              "CUSTOMER",
              "EXPENSES",
              "PLANNING_BATCH",
              "SHIFT_ASSIGNMENT",
              "SHIFT",
              "PICKUP_ASSIGNMENT",
              "SHIPMENT_CATEGORY",
              "GEOFENCE",
              "DEPARTMENT",
              "GRID_FILTER",
              "HUB",
              "IMPORTED_DATA",
              "PICKUP_SESSION"
            ]
          },
          "name": {
            "type": "string"
          },
          "publicAccess": {
            "type": "boolean"
          },
          "queryParam": {
            "type": "string"
          }
        },
        "title": "GridFilterPutPayloadDto"
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "badgeColor": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "GroupDto"
      },
      "GroupPostPayloadDto": {
        "type": "object",
        "properties": {
          "badgeColor": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "GroupPostPayloadDto"
      },
      "GroupPutPayloadDto": {
        "type": "object",
        "properties": {
          "badgeColor": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "GroupPutPayloadDto"
      },
      "HubDto": {
        "type": "object",
        "properties": {
          "cityTags": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "HubDto"
      },
      "HubPostPayloadDto": {
        "type": "object",
        "properties": {
          "cityTags": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "HubPostPayloadDto"
      },
      "HubPutPayloadDto": {
        "type": "object",
        "properties": {
          "cityTags": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "HubPutPayloadDto"
      },
      "ImportedDataDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "TASK",
              "REPAIR_ORDER",
              "ISSUE",
              "ASSET",
              "EMPLOYEE",
              "COMPANY",
              "GROUP",
              "SYSTEM_USER",
              "CUSTOMER",
              "EXPENSES",
              "PLANNING_BATCH",
              "SHIFT_ASSIGNMENT",
              "SHIFT",
              "PICKUP_ASSIGNMENT",
              "SHIPMENT_CATEGORY",
              "GEOFENCE",
              "DEPARTMENT",
              "GRID_FILTER",
              "HUB",
              "IMPORTED_DATA",
              "PICKUP_SESSION"
            ]
          },
          "errorMessage": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "importStatus": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "importedFileURL": {
            "type": "string"
          },
          "importedRowsCount": {
            "type": "integer",
            "format": "int32"
          },
          "processedFileURL": {
            "type": "string"
          },
          "retriesCount": {
            "type": "integer",
            "format": "int32"
          },
          "timeSpentInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "uploadStatus": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          }
        },
        "title": "ImportedDataDto"
      },
      "InputStream": {
        "type": "object",
        "title": "InputStream"
      },
      "IssueChartDto": {
        "type": "object",
        "properties": {
          "accidentCount": {
            "type": "integer",
            "format": "int64"
          },
          "closedCount": {
            "type": "integer",
            "format": "int64"
          },
          "openCount": {
            "type": "integer",
            "format": "int64"
          },
          "overdueCount": {
            "type": "integer",
            "format": "int64"
          },
          "regularCount": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "IssueChartDto"
      },
      "IssueDto": {
        "type": "object",
        "properties": {
          "approvedAmount": {
            "type": "number"
          },
          "approver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "asset": {
            "$ref": "#/definitions/AssetLiteDto"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "insuranceStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "SUBMITTED",
              "APPROVED",
              "REJECTED"
            ]
          },
          "loadAmount": {
            "type": "number"
          },
          "notes": {
            "type": "string"
          },
          "odometer": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reportedBy": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "OVERDUE",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "totalAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "REGULAR",
              "ACCIDENT"
            ]
          }
        },
        "title": "IssueDto"
      },
      "IssuePostPayloadDto": {
        "type": "object",
        "properties": {
          "approvedAmount": {
            "type": "number"
          },
          "approver": {
            "type": "integer",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "insuranceStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "SUBMITTED",
              "APPROVED",
              "REJECTED"
            ]
          },
          "loadAmount": {
            "type": "number"
          },
          "notes": {
            "type": "string"
          },
          "odometer": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reportedBy": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "OVERDUE",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "totalAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "REGULAR",
              "ACCIDENT"
            ]
          }
        },
        "title": "IssuePostPayloadDto"
      },
      "IssuePutPayloadDto": {
        "type": "object",
        "properties": {
          "approvedAmount": {
            "type": "number"
          },
          "approver": {
            "type": "integer",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "insuranceStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "SUBMITTED",
              "APPROVED",
              "REJECTED"
            ]
          },
          "loadAmount": {
            "type": "number"
          },
          "notes": {
            "type": "string"
          },
          "odometer": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reportedBy": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "OVERDUE",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "totalAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "REGULAR",
              "ACCIDENT"
            ]
          }
        },
        "title": "IssuePutPayloadDto"
      },
      "JsonMergePatch": {
        "type": "object",
        "title": "JsonMergePatch"
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32",
            "minimum": -128,
            "maximum": 127
          },
          "minute": {
            "type": "integer",
            "format": "int32",
            "minimum": -128,
            "maximum": 127
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32",
            "minimum": -128,
            "maximum": 127
          }
        },
        "title": "LocalTime"
      },
      "LocationDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "contactFax": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "district": {
            "type": "string"
          },
          "geofence": {
            "$ref": "#/definitions/GeofenceDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "stateProvince": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "title": "LocationDto"
      },
      "LocationLiteDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "district": {
            "type": "string"
          },
          "geofence": {
            "$ref": "#/definitions/GeofenceDto"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "title": "LocationLiteDto"
      },
      "LocationPostPayloadDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "contactFax": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "district": {
            "type": "string"
          },
          "geofenceId": {
            "type": "integer",
            "format": "int64"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "stateProvince": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "title": "LocationPostPayloadDto"
      },
      "LookupsDto": {
        "type": "object",
        "properties": {
          "assetStatuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "IN_ACTIVE",
                "IN_SHOP",
                "OUT_OF_SERVICE",
                "SOLD"
              ]
            }
          },
          "assetTypes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetTypeDto"
            }
          },
          "asyncProcessStatus": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED"
              ]
            }
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CountryDto"
            }
          },
          "deliveryTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SAME_DAY",
                "NEXT_DAY",
                "EXPRESS"
              ]
            }
          },
          "expensesTypes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExpensesTypeDto"
            }
          },
          "models": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK",
                "REPAIR_ORDER",
                "ISSUE",
                "ASSET",
                "EMPLOYEE",
                "COMPANY",
                "GROUP",
                "SYSTEM_USER",
                "CUSTOMER",
                "EXPENSES",
                "PLANNING_BATCH",
                "SHIFT_ASSIGNMENT",
                "SHIFT",
                "PICKUP_ASSIGNMENT",
                "SHIPMENT_CATEGORY",
                "GEOFENCE",
                "DEPARTMENT",
                "GRID_FILTER",
                "HUB",
                "IMPORTED_DATA",
                "PICKUP_SESSION"
              ]
            }
          },
          "netsuiteEntites": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "COMPANY",
                "DEPARTMENT",
                "GROUP",
                "GEOFENCE",
                "LOCATION",
                "EMPLOYEE",
                "ASSET",
                "CUSTOMER",
                "ITEM",
                "ASSET_ASSIGNMENT",
                "SALES_ORDER",
                "CONSIGNMENT",
                "ACTIVITY_ASSIGNMENT"
              ]
            }
          },
          "notificationActions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TASK_HAS_BEEN_ASSIGNED",
                "TASK_STATUS_UPDATED_TO_ARRIVED_ON_DC",
                "TASK_STATUS_UPDATED_TO_OUT_FOR_DELIVERY",
                "TASK_STATUS_UPDATED_TO_PICKED_UP",
                "TASK_STATUS_UPDATED_TO_IN_TRANSIT",
                "TASK_STATUS_UPDATED_TO_DELIVERED",
                "TASK_STATUS_UPDATED_TO_FAILED",
                "TASK_STATUS_UPDATED_TO_CANCELED"
              ]
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "LIST",
                "CREATE",
                "UPDATE",
                "DELETE"
              ]
            }
          },
          "planningBatchStatuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED"
              ]
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RoleDto"
            }
          },
          "salesOrderStatuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED"
              ]
            }
          },
          "salesOrderTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DELIVERY",
                "RENTAL"
              ]
            }
          },
          "taskActivityTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CREATE",
                "ASSIGN",
                "CHANGE_STATUS",
                "SMS_SENT"
              ]
            }
          },
          "taskStatuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ORDERED",
                "DELIVERED",
                "CANCELED",
                "FAILED",
                "IN_TRANSIT",
                "PICKED_UP",
                "ARRIVED_IN_DC",
                "OUT_FOR_DELIVERY",
                "PROCESS_FOR_RETURN",
                "RETURNED_TO_SHIPPER",
                "HUB_TRANSFER",
                "RESCHEDULED",
                "REATTEMPT",
                "RETURNED_TO_DC"
              ]
            }
          },
          "taskTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DELIVERY",
                "COLLECTION"
              ]
            }
          }
        },
        "title": "LookupsDto"
      },
      "NesuiteErrorMsgResponse": {
        "type": "object",
        "properties": {
          "errorMsg": {
            "type": "string"
          },
          "netsuiteId": {
            "type": "string"
          }
        },
        "title": "NesuiteErrorMsgResponse"
      },
      "NetsuiteConfig": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdBy": {
            "$ref": "#/definitions/SystemUser"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "instanceUrl": {
            "type": "string"
          },
          "lastModifiedBy": {
            "$ref": "#/definitions/SystemUser"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "netsuiteActivityAssignmentsFetchApi": {
            "type": "string"
          },
          "netsuiteAssetAssignmentsFetchApi": {
            "type": "string"
          },
          "netsuiteAssetSalesOrdersFetchApi": {
            "type": "string"
          },
          "netsuiteAssetsFetchApi": {
            "type": "string"
          },
          "netsuiteCompaniesFetchApi": {
            "type": "string"
          },
          "netsuiteConsignmentFetchApi": {
            "type": "string"
          },
          "netsuiteCustomersFetchApi": {
            "type": "string"
          },
          "netsuiteDepartmentsFetchApi": {
            "type": "string"
          },
          "netsuiteEmployeesFetchApi": {
            "type": "string"
          },
          "netsuiteGeofencesFetchApi": {
            "type": "string"
          },
          "netsuiteGroupsFetchApi": {
            "type": "string"
          },
          "netsuiteId": {
            "type": "string"
          },
          "netsuiteItemsFetchApi": {
            "type": "string"
          },
          "netsuiteLocationsFetchApi": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "title": "NetsuiteConfig"
      },
      "NetsuiteSyncEntityAuditDto": {
        "type": "object",
        "properties": {
          "createdBy": {
            "$ref": "#/definitions/SystemUserDto"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "entityName": {
            "type": "string",
            "enum": [
              "COMPANY",
              "DEPARTMENT",
              "GROUP",
              "GEOFENCE",
              "LOCATION",
              "EMPLOYEE",
              "ASSET",
              "CUSTOMER",
              "ITEM",
              "ASSET_ASSIGNMENT",
              "SALES_ORDER",
              "CONSIGNMENT",
              "ACTIVITY_ASSIGNMENT"
            ]
          },
          "lasSyncDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastSyncFiredBy": {
            "$ref": "#/definitions/SystemUserDto"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "totalCreated": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpdated": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "NetsuiteSyncEntityAuditDto"
      },
      "NetsuiteSyncResponse": {
        "type": "object",
        "properties": {
          "currentRecordsUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NesuiteErrorMsgResponse"
            }
          },
          "newRecordsFetched": {
            "type": "integer",
            "format": "int32"
          },
          "totalTouchedRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "NetsuiteSyncResponse"
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "unpaged": {
            "type": "boolean"
          }
        },
        "title": "Pageable"
      },
      "Page«AssetDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«AssetDto»"
      },
      "Page«AssetExpensesDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetExpensesDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«AssetExpensesDto»"
      },
      "Page«AssetTrackablePositionDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetTrackablePositionDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«AssetTrackablePositionDto»"
      },
      "Page«CompanyDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CompanyDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«CompanyDto»"
      },
      "Page«CustomerDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«CustomerDto»"
      },
      "Page«CustomerHookDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerHookDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«CustomerHookDto»"
      },
      "Page«DepartmentDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DepartmentDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«DepartmentDto»"
      },
      "Page«EmployeeDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/EmployeeDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«EmployeeDto»"
      },
      "Page«EmployeeTrackablePositionDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/EmployeeTrackablePositionDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«EmployeeTrackablePositionDto»"
      },
      "Page«GeofenceDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeofenceDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«GeofenceDto»"
      },
      "Page«GridFilterDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GridFilterDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«GridFilterDto»"
      },
      "Page«GroupDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«GroupDto»"
      },
      "Page«HubDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/HubDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«HubDto»"
      },
      "Page«ImportedDataDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ImportedDataDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«ImportedDataDto»"
      },
      "Page«IssueDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IssueDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«IssueDto»"
      },
      "Page«PickupAssignmentDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PickupAssignmentDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«PickupAssignmentDto»"
      },
      "Page«PickupSessionDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PickupSessionDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«PickupSessionDto»"
      },
      "Page«PlanningBatchDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PlanningBatchDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«PlanningBatchDto»"
      },
      "Page«RepairOrderDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RepairOrderDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«RepairOrderDto»"
      },
      "Page«SalesOrderDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SalesOrderDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«SalesOrderDto»"
      },
      "Page«ShiftAssignmentDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ShiftAssignmentDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«ShiftAssignmentDto»"
      },
      "Page«ShiftDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ShiftDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«ShiftDto»"
      },
      "Page«ShipmentCategoryDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ShipmentCategoryDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«ShipmentCategoryDto»"
      },
      "Page«SystemUserDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SystemUserDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«SystemUserDto»"
      },
      "Page«TaskDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«TaskDto»"
      },
      "Page«TaskFailureReasonDto»": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskFailureReasonDto"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/definitions/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/definitions/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«TaskFailureReasonDto»"
      },
      "PickupAssignmentDto": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "driver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "geofences": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeofenceDto"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "weekDays": {
            "type": "string"
          }
        },
        "title": "PickupAssignmentDto"
      },
      "PickupAssignmentPostPayloadDto": {
        "type": "object",
        "properties": {
          "customersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "weekDays": {
            "type": "string"
          }
        },
        "title": "PickupAssignmentPostPayloadDto"
      },
      "PickupAssignmentPutPayloadDto": {
        "type": "object",
        "properties": {
          "customersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "weekDays": {
            "type": "string"
          }
        },
        "title": "PickupAssignmentPutPayloadDto"
      },
      "PickupSessionDto": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/definitions/CustomerLiteDto"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "driver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "ended": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "totalPackagesCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalTasksCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "PickupSessionDto"
      },
      "PickupSessionPostPayloadDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "totalPackagesCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalTasksCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "PickupSessionPostPayloadDto"
      },
      "PlanningBatchDto": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "expectedTasksCount": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "tasksExecutedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "PlanningBatchDto"
      },
      "PlanningBatchPostPayloadDto": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          }
        },
        "title": "PlanningBatchPostPayloadDto"
      },
      "PlanningBatchPutPayloadDto": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          }
        },
        "title": "PlanningBatchPutPayloadDto"
      },
      "RepairOrderChartDto": {
        "type": "object",
        "properties": {
          "approvedCount": {
            "type": "integer",
            "format": "int64"
          },
          "openCount": {
            "type": "integer",
            "format": "int64"
          },
          "pendingCount": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "RepairOrderChartDto"
      },
      "RepairOrderDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "approver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "asset": {
            "$ref": "#/definitions/AssetLiteDto"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "discount": {
            "type": "number"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "issue": {
            "$ref": "#/definitions/IssueDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RepairOrderItemDto"
            }
          },
          "odometer": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reportedBy": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "vendor": {
            "type": "string"
          }
        },
        "title": "RepairOrderDto"
      },
      "RepairOrderItemDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "grossAmount": {
            "type": "number"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "tax": {
            "type": "number"
          }
        },
        "title": "RepairOrderItemDto"
      },
      "RepairOrderItemPostPayloadDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "grossAmount": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "tax": {
            "type": "number"
          }
        },
        "title": "RepairOrderItemPostPayloadDto"
      },
      "RepairOrderItemPutPayloadDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "grossAmount": {
            "type": "number"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "tax": {
            "type": "number"
          }
        },
        "title": "RepairOrderItemPutPayloadDto"
      },
      "RepairOrderPostPayloadDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "approver": {
            "type": "integer",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "discount": {
            "type": "number"
          },
          "issueId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RepairOrderItemPostPayloadDto"
            }
          },
          "odometer": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reportedBy": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "vendor": {
            "type": "string"
          }
        },
        "title": "RepairOrderPostPayloadDto"
      },
      "RepairOrderPutPayloadDto": {
        "type": "object",
        "properties": {
          "approvalStatus": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "APPROVED",
              "REJECTED"
            ]
          },
          "approver": {
            "type": "integer",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "discount": {
            "type": "number"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "issueId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RepairOrderItemPutPayloadDto"
            }
          },
          "odometer": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "reportedBy": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "PENDING",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "vendor": {
            "type": "string"
          }
        },
        "title": "RepairOrderPutPayloadDto"
      },
      "RescheduleTaskPayloadDto": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "deliveryEndTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryStartTime": {
            "$ref": "#/definitions/LocalTime"
          }
        },
        "title": "RescheduleTaskPayloadDto"
      },
      "Resource": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "file": {
            "$ref": "#/definitions/File"
          },
          "filename": {
            "type": "string"
          },
          "inputStream": {
            "$ref": "#/definitions/InputStream"
          },
          "open": {
            "type": "boolean"
          },
          "readable": {
            "type": "boolean"
          },
          "uri": {
            "$ref": "#/definitions/URI"
          },
          "url": {
            "$ref": "#/definitions/URL"
          }
        },
        "title": "Resource"
      },
      "ResponseEntity": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "statusCodeValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "ResponseEntity"
      },
      "Role": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_ADMIN",
              "DRIVER",
              "WAREHOUSE",
              "CUSTOMER_ADMIN"
            ]
          },
          "nameAr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          }
        },
        "title": "Role"
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "nameAr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          }
        },
        "title": "RoleDto"
      },
      "SalesOrderDto": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "creationState": {
            "type": "string",
            "enum": [
              "NULL",
              "BASIC_DATA",
              "CONSIGNMENTS",
              "TASKS",
              "MAPPING",
              "CREATED"
            ]
          },
          "ctime": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "$ref": "#/definitions/CustomerDto"
          },
          "dealDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "memo": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "salesOrderType": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "RENTAL"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "trip": {
            "$ref": "#/definitions/TripDto"
          }
        },
        "title": "SalesOrderDto"
      },
      "SalesOrderLiteDto": {
        "type": "object",
        "properties": {
          "creationState": {
            "type": "string",
            "enum": [
              "NULL",
              "BASIC_DATA",
              "CONSIGNMENTS",
              "TASKS",
              "MAPPING",
              "CREATED"
            ]
          },
          "ctime": {
            "type": "string",
            "format": "date-time"
          },
          "dealDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "memo": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "salesOrderType": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "RENTAL"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          }
        },
        "title": "SalesOrderLiteDto"
      },
      "SalesOrderPostPayloadDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "dealDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "salesOrderType": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "RENTAL"
            ]
          }
        },
        "title": "SalesOrderPostPayloadDto"
      },
      "SalesOrderPutPayloadDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "dealDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "memo": {
            "type": "string"
          },
          "poNumber": {
            "type": "string"
          },
          "salesOrderType": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "RENTAL"
            ]
          }
        },
        "title": "SalesOrderPutPayloadDto"
      },
      "ShiftAssignmentDto": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/AssetLiteDto"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/definitions/ShipmentCategoryDto"
          },
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "driver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "geofences": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeofenceDto"
            }
          },
          "helper": {
            "$ref": "#/definitions/EmployeeLiteDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "totalCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "weekDays": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftAssignmentDto"
      },
      "ShiftAssignmentLiteDto": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/definitions/ShipmentCategoryDto"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "totalCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "weekDays": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftAssignmentLiteDto"
      },
      "ShiftAssignmentPostPayloadDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "helperId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "shipmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "totalCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "validDeliveryTime": {
            "type": "boolean"
          },
          "weekDays": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftAssignmentPostPayloadDto"
      },
      "ShiftAssignmentPutPayloadDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "helperId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "shipmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "tasksIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "totalCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "validDeliveryTime": {
            "type": "boolean"
          },
          "weekDays": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftAssignmentPutPayloadDto"
      },
      "ShiftDto": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/AssetLiteDto"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/definitions/ShipmentCategoryDto"
          },
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "driver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endOdometer": {
            "type": "string"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "geofences": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeofenceDto"
            }
          },
          "helper": {
            "$ref": "#/definitions/EmployeeLiteDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remainingCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "shiftAssignment": {
            "$ref": "#/definitions/ShiftAssignmentLiteDto"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startOdometer": {
            "type": "string"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "usedCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftDto"
      },
      "ShiftLiteDto": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remainingCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "usedCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftLiteDto"
      },
      "ShiftPostPayloadDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endOdometer": {
            "type": "string"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "helperId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "shiftAssignmentId": {
            "type": "integer",
            "format": "int64"
          },
          "shipmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startOdometer": {
            "type": "string"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "tasksIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "validDeliveryTime": {
            "type": "boolean"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftPostPayloadDto"
      },
      "ShiftPutPayloadDto": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endOdometer": {
            "type": "string"
          },
          "endTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "helperId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string"
          },
          "shiftAssignmentId": {
            "type": "integer",
            "format": "int64"
          },
          "shipmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "startOdometer": {
            "type": "string"
          },
          "startTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "tasksIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "validDeliveryTime": {
            "type": "boolean"
          },
          "zone": {
            "type": "string"
          }
        },
        "title": "ShiftPutPayloadDto"
      },
      "ShipmentCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nameAr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          }
        },
        "title": "ShipmentCategoryDto"
      },
      "ShipmentCategoryPostPayloadDto": {
        "type": "object",
        "properties": {
          "nameAr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          }
        },
        "title": "ShipmentCategoryPostPayloadDto"
      },
      "ShipmentCategoryPutPayloadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nameAr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          }
        },
        "title": "ShipmentCategoryPutPayloadDto"
      },
      "ShipmentPackageDto": {
        "type": "object",
        "properties": {
          "encryptedShipmentId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "packageId": {
            "type": "string"
          },
          "packageStatus": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          },
          "trackingId": {
            "type": "string"
          }
        },
        "title": "ShipmentPackageDto"
      },
      "ShipmentPackagePostPayloadDto": {
        "type": "object",
        "properties": {
          "encryptedShipmentId": {
            "type": "string"
          },
          "packageId": {
            "type": "string"
          },
          "packageStatus": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          },
          "trackingId": {
            "type": "string"
          }
        },
        "title": "ShipmentPackagePostPayloadDto"
      },
      "ShipmentPackagePutPayloadDto": {
        "type": "object",
        "properties": {
          "encryptedShipmentId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "packageId": {
            "type": "string"
          },
          "packageStatus": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          },
          "trackingId": {
            "type": "string"
          }
        },
        "title": "ShipmentPackagePutPayloadDto"
      },
      "ShipmentPackageStatusDto": {
        "type": "object",
        "properties": {
          "packageStatus": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          },
          "trackingId": {
            "type": "string"
          }
        },
        "title": "ShipmentPackageStatusDto"
      },
      "ShipmentPackageUpdateStatusPostPayloadDto": {
        "type": "object",
        "properties": {
          "deliveryInformation": {
            "$ref": "#/definitions/DeliveryInformationPayload"
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ShipmentPackageStatusDto"
            }
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          }
        },
        "title": "ShipmentPackageUpdateStatusPostPayloadDto"
      },
      "Sort": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        },
        "title": "Sort"
      },
      "Stops": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "averageSpeed": {
            "type": "number",
            "format": "double"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceName": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "endOdometer": {
            "type": "number",
            "format": "double"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "engineHours": {
            "type": "integer",
            "format": "int64"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "maxSpeed": {
            "type": "number",
            "format": "double"
          },
          "positionId": {
            "type": "integer",
            "format": "int64"
          },
          "spentFuel": {
            "type": "number",
            "format": "double"
          },
          "startOdometer": {
            "type": "number",
            "format": "double"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Stops"
      },
      "SystemUser": {
        "type": "object",
        "properties": {
          "accountNonExpired": {
            "type": "boolean"
          },
          "accountNonLocked": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GrantedAuthority"
            }
          },
          "createdBy": {
            "$ref": "#/definitions/SystemUser"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "credentialsNonExpired": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "driver": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "$ref": "#/definitions/SystemUser"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "systemUserRoles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SystemUserRole"
            }
          },
          "token": {
            "type": "string"
          },
          "trackable": {
            "type": "boolean"
          },
          "trackingItem": {
            "$ref": "#/definitions/TrackingItem"
          },
          "username": {
            "type": "string"
          },
          "warehouse": {
            "type": "boolean"
          }
        },
        "title": "SystemUser"
      },
      "SystemUserAdminPostDto": {
        "type": "object",
        "properties": {
          "employeeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "systemUsersIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "title": "SystemUserAdminPostDto"
      },
      "SystemUserDto": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastName": {
            "type": "string"
          },
          "managedEntitiesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_ADMIN",
              "DRIVER",
              "WAREHOUSE",
              "CUSTOMER_ADMIN"
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SUPER_ADMIN",
                "COMPANY_ADMIN",
                "DRIVER",
                "WAREHOUSE",
                "CUSTOMER_ADMIN"
              ]
            }
          },
          "trackingItem": {
            "$ref": "#/definitions/TrackingItemDto"
          }
        },
        "title": "SystemUserDto"
      },
      "SystemUserLiteDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "SystemUserLiteDto"
      },
      "SystemUserPostPayloadDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "managedEntitiesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_ADMIN",
              "DRIVER",
              "WAREHOUSE",
              "CUSTOMER_ADMIN"
            ]
          },
          "validDriverWithCompany": {
            "type": "boolean"
          }
        },
        "title": "SystemUserPostPayloadDto"
      },
      "SystemUserPutPayloadDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastName": {
            "type": "string"
          },
          "managedEntitiesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_ADMIN",
              "DRIVER",
              "WAREHOUSE",
              "CUSTOMER_ADMIN"
            ]
          },
          "validDriverWithCompany": {
            "type": "boolean"
          }
        },
        "title": "SystemUserPutPayloadDto"
      },
      "SystemUserResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "title": "SystemUserResetPasswordDto"
      },
      "SystemUserRole": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          },
          "ctime": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "$ref": "#/definitions/Role"
          },
          "systemUserRolePK": {
            "$ref": "#/definitions/SystemUserRolePK"
          }
        },
        "title": "SystemUserRole"
      },
      "SystemUserRolePK": {
        "type": "object",
        "properties": {
          "role": {
            "type": "integer",
            "format": "int32"
          },
          "systemUser": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "SystemUserRolePK"
      },
      "TaskActivityDto": {
        "type": "object",
        "properties": {
          "activityType": {
            "type": "string",
            "enum": [
              "CREATE",
              "ASSIGN",
              "CHANGE_STATUS",
              "SMS_SENT"
            ]
          },
          "createdBy": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          }
        },
        "title": "TaskActivityDto"
      },
      "TaskConsigneeFilter": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "geofenceName": {
            "type": "string"
          },
          "geofencesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "hasGeofences": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "title": "TaskConsigneeFilter"
      },
      "TaskDto": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "ageVerificationRequired": {
            "type": "boolean"
          },
          "amazonInformation": {
            "$ref": "#/definitions/AmazonInformationDto"
          },
          "awb": {
            "type": "string"
          },
          "codAmount": {
            "type": "number"
          },
          "codCurrency": {
            "type": "string"
          },
          "company": {
            "$ref": "#/definitions/CompanyDto"
          },
          "consignee": {
            "$ref": "#/definitions/ConsigneeLiteDto"
          },
          "customer": {
            "$ref": "#/definitions/CustomerLiteDto"
          },
          "customerOrderNumber": {
            "type": "string"
          },
          "deliverToCustomerOnly": {
            "type": "boolean"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "deliveryEndTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryInformation": {
            "$ref": "#/definitions/DeliveryInformationDto"
          },
          "deliveryStartTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "SAME_DAY",
              "NEXT_DAY",
              "EXPRESS"
            ]
          },
          "details": {
            "type": "string"
          },
          "driver": {
            "$ref": "#/definitions/SystemUserLiteDto"
          },
          "hangers": {
            "type": "string"
          },
          "hub": {
            "$ref": "#/definitions/HubDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "notes": {
            "type": "string"
          },
          "pickupSession": {
            "$ref": "#/definitions/PickupSessionDto"
          },
          "planningBatch": {
            "$ref": "#/definitions/PlanningBatchDto"
          },
          "referenceNumber": {
            "type": "string"
          },
          "safePlace": {
            "type": "string"
          },
          "salesOrder": {
            "$ref": "#/definitions/SalesOrderLiteDto"
          },
          "shift": {
            "$ref": "#/definitions/ShiftLiteDto"
          },
          "shipFrom": {
            "$ref": "#/definitions/LocationDto"
          },
          "shipmentCategory": {
            "$ref": "#/definitions/ShipmentCategoryDto"
          },
          "shipmentPackages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ShipmentPackageDto"
            }
          },
          "signatureRequired": {
            "type": "boolean"
          },
          "smsNotifications": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          },
          "taskCompleted": {
            "type": "boolean"
          },
          "totalDeclaredGrossWeight": {
            "type": "number"
          },
          "totalShipmentQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "totalShipmentQuantityUom": {
            "type": "string"
          },
          "totalShipmentValueAmount": {
            "type": "number"
          },
          "totalShipmentValueChargeOrAllowance": {
            "type": "string"
          },
          "totalShipmentValueCurrency": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "COLLECTION"
            ]
          },
          "volume": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "TaskDto"
      },
      "TaskExportPayloadDto": {
        "type": "object",
        "properties": {
          "taskFilter": {
            "$ref": "#/definitions/TaskFilterDto"
          }
        },
        "title": "TaskExportPayloadDto"
      },
      "TaskFailureReasonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string"
          },
          "visibleToDriver": {
            "type": "boolean"
          }
        },
        "title": "TaskFailureReasonDto"
      },
      "TaskFailureReasonPostPayloadDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "visibleToDriver": {
            "type": "boolean"
          }
        },
        "title": "TaskFailureReasonPostPayloadDto"
      },
      "TaskFailureReasonPutPayloadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string"
          },
          "visibleToDriver": {
            "type": "boolean"
          }
        },
        "title": "TaskFailureReasonPutPayloadDto"
      },
      "TaskFilterDto": {
        "type": "object",
        "properties": {
          "awbs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "companyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "consignee": {
            "$ref": "#/definitions/TaskConsigneeFilter"
          },
          "customerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "deliveryAfterTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryBeforeTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryDateFrom": {
            "type": "string",
            "format": "date"
          },
          "deliveryDateTo": {
            "type": "string",
            "format": "date"
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "SAME_DAY",
              "NEXT_DAY",
              "EXPRESS"
            ]
          },
          "driverIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "failureReasonComment": {
            "type": "string"
          },
          "hasDriver": {
            "type": "boolean"
          },
          "hasGeofences": {
            "type": "boolean"
          },
          "hasOpenStatus": {
            "type": "boolean"
          },
          "hubsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "shipmentPackageId": {
            "type": "integer",
            "format": "int64"
          },
          "shipmentPackageState": {
            "type": "string",
            "enum": [
              "NORMAL",
              "DIFFERENT_STATUS",
              "ZERO_PACKAGES"
            ]
          },
          "shipmentPackageTrackingId": {
            "type": "string"
          },
          "smsNotifications": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ORDERED",
                "DELIVERED",
                "CANCELED",
                "FAILED",
                "IN_TRANSIT",
                "PICKED_UP",
                "ARRIVED_IN_DC",
                "OUT_FOR_DELIVERY",
                "PROCESS_FOR_RETURN",
                "RETURNED_TO_SHIPPER",
                "HUB_TRANSFER",
                "RESCHEDULED",
                "REATTEMPT",
                "RETURNED_TO_DC"
              ]
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "COLLECTION"
            ]
          }
        },
        "title": "TaskFilterDto"
      },
      "TaskImportPostPayloadDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "s3key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "TaskImportPostPayloadDto"
      },
      "TaskPlanningExecutionPayloadDto": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "queryParam": {
            "type": "string"
          },
          "taskFilter": {
            "$ref": "#/definitions/TaskFilterDto"
          }
        },
        "title": "TaskPlanningExecutionPayloadDto"
      },
      "TaskPostPayloadDto": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "ageVerificationRequired": {
            "type": "boolean"
          },
          "amazonInformation": {
            "$ref": "#/definitions/AmazonInformationPostPayloadDto"
          },
          "awb": {
            "type": "string"
          },
          "codAmount": {
            "type": "number"
          },
          "codCurrency": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "consignee": {
            "$ref": "#/definitions/ConsigneePostPayloadDto"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerOrderNumber": {
            "type": "string"
          },
          "deliverToCustomerOnly": {
            "type": "boolean"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date"
          },
          "deliveryEndTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryInformation": {
            "$ref": "#/definitions/DeliveryInformationPostPayloadDto"
          },
          "deliveryStartTime": {
            "$ref": "#/definitions/LocalTime"
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "SAME_DAY",
              "NEXT_DAY",
              "EXPRESS"
            ]
          },
          "details": {
            "type": "string"
          },
          "driverId": {
            "type": "integer",
            "format": "int64"
          },
          "hangers": {
            "type": "string"
          },
          "hubId": {
            "type": "integer",
            "format": "int64"
          },
          "notes": {
            "type": "string"
          },
          "pickupSessionId": {
            "type": "integer",
            "format": "int64"
          },
          "referenceNumber": {
            "type": "string"
          },
          "safePlace": {
            "type": "string"
          },
          "salesOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "shiftId": {
            "type": "integer",
            "format": "int64"
          },
          "shipFrom": {
            "$ref": "#/definitions/LocationPostPayloadDto"
          },
          "shipmentCategoryId": {
            "type": "integer",
            "format": "int64"
          },
          "shipmentPackages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ShipmentPackagePostPayloadDto"
            }
          },
          "signatureRequired": {
            "type": "boolean"
          },
          "smsNotifications": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ORDERED",
              "DELIVERED",
              "CANCELED",
              "FAILED",
              "IN_TRANSIT",
              "PICKED_UP",
              "ARRIVED_IN_DC",
              "OUT_FOR_DELIVERY",
              "PROCESS_FOR_RETURN",
              "RETURNED_TO_SHIPPER",
              "HUB_TRANSFER",
              "RESCHEDULED",
              "REATTEMPT",
              "RETURNED_TO_DC"
            ]
          },
          "taskCompleted": {
            "type": "boolean"
          },
          "totalDeclaredGrossWeight": {
            "type": "number"
          },
          "totalShipmentQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "totalShipmentQuantityUom": {
            "type": "string"
          },
          "totalShipmentValueAmount": {
            "type": "number"
          },
          "totalShipmentValueChargeOrAllowance": {
            "type": "string"
          },
          "totalShipmentValueCurrency": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "COLLECTION"
            ]
          },
          "volume": {
            "type": "number",
            "format": "float"
          }
        },
        "title": "TaskPostPayloadDto"
      },
      "TaskStatsDto": {
        "type": "object",
        "properties": {
          "arrivedAtDCCount": {
            "type": "integer",
            "format": "int32"
          },
          "assignedCount": {
            "type": "integer",
            "format": "int32"
          },
          "completedCount": {
            "type": "integer",
            "format": "int32"
          },
          "failedCount": {
            "type": "integer",
            "format": "int32"
          },
          "inTransitCount": {
            "type": "integer",
            "format": "int32"
          },
          "outForDeliveryCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "TaskStatsDto"
      },
      "TenantDataPutDto": {
        "type": "object",
        "properties": {
          "androidSplashUrl": {
            "type": "string"
          },
          "iosSplashUrl": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          }
        },
        "title": "TenantDataPutDto"
      },
      "TenantDto": {
        "type": "object",
        "properties": {
          "androidSplashUrl": {
            "type": "string"
          },
          "appLink": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "iosSplashUrl": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          }
        },
        "title": "TenantDto"
      },
      "TenantMicroserviceDto": {
        "type": "object",
        "properties": {
          "dbConnectionUrl": {
            "type": "string"
          },
          "dbName": {
            "type": "string"
          },
          "dbPassword": {
            "type": "string"
          },
          "dbUsername": {
            "type": "string"
          },
          "microservice": {
            "$ref": "#/definitions/TmMicroserviceDto"
          },
          "tenant": {
            "$ref": "#/definitions/TmTenantDto"
          }
        },
        "title": "TenantMicroserviceDto"
      },
      "TmMicroserviceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "title": "TmMicroserviceDto"
      },
      "TmTenantDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          }
        },
        "title": "TmTenantDto"
      },
      "TrackingItem": {
        "type": "object",
        "properties": {
          "createdBy": {
            "$ref": "#/definitions/SystemUser"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "disabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "$ref": "#/definitions/SystemUser"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "uniqueId": {
            "type": "string"
          }
        },
        "title": "TrackingItem"
      },
      "TrackingItemDto": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "disabled": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uniqueId": {
            "type": "string"
          }
        },
        "title": "TrackingItemDto"
      },
      "Trip": {
        "type": "object",
        "properties": {
          "averageSpeed": {
            "type": "number",
            "format": "double"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceName": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "driverName": {
            "type": "string"
          },
          "driverUniqueId": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "endAddress": {
            "type": "string"
          },
          "endLat": {
            "type": "number",
            "format": "double"
          },
          "endLon": {
            "type": "number",
            "format": "double"
          },
          "endOdometer": {
            "type": "number",
            "format": "double"
          },
          "endPositionId": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "maxSpeed": {
            "type": "number",
            "format": "double"
          },
          "spentFuel": {
            "type": "number",
            "format": "double"
          },
          "startAddress": {
            "type": "string"
          },
          "startLat": {
            "type": "number",
            "format": "double"
          },
          "startLon": {
            "type": "number",
            "format": "double"
          },
          "startOdometer": {
            "type": "number",
            "format": "double"
          },
          "startPositionId": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Trip"
      },
      "TripDto": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": "TripDto"
      },
      "URI": {
        "type": "object",
        "properties": {
          "absolute": {
            "type": "boolean"
          },
          "authority": {
            "type": "string"
          },
          "fragment": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "opaque": {
            "type": "boolean"
          },
          "path": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "query": {
            "type": "string"
          },
          "rawAuthority": {
            "type": "string"
          },
          "rawFragment": {
            "type": "string"
          },
          "rawPath": {
            "type": "string"
          },
          "rawQuery": {
            "type": "string"
          },
          "rawSchemeSpecificPart": {
            "type": "string"
          },
          "rawUserInfo": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "schemeSpecificPart": {
            "type": "string"
          },
          "userInfo": {
            "type": "string"
          }
        },
        "title": "URI"
      },
      "URL": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          },
          "content": {
            "type": "object"
          },
          "defaultPort": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "protocol": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "ref": {
            "type": "string"
          },
          "userInfo": {
            "type": "string"
          }
        },
        "title": "URL"
      }
    }
  }